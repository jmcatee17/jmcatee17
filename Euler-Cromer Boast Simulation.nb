(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    261494,       5014]
NotebookOptionsPosition[    257531,       4943]
NotebookOutlinePosition[    257938,       4961]
CellTagsIndexPosition[    257895,       4958]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Path 1:", "Section",
 CellChangeTimes->{{3.815848155448704*^9, 
  3.815848157031465*^9}},ExpressionUUID->"d149ec71-2c88-490d-a65c-\
3a0f7544ddc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{" ", 
     RowBox[{
      RowBox[{"Error", " ", 
       RowBox[{"Key", ":", " ", "floor"}]}], " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", 
        RowBox[{"-", "10"}], ",", 
        RowBox[{"-", "10"}]}]}]}], ")"}], ",", " ", 
    RowBox[{
     RowBox[{"2", "nd", " ", "side", " ", "wall"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "25"}], ",", " ", 
       RowBox[{"-", "25"}], ",", " ", 
       RowBox[{"-", "25"}]}], "}"}]}], ",", " ", 
    RowBox[{"ceiling", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"25", ",", "25", ",", "25"}], "}"}]}], ",", " ", 
    RowBox[{
     RowBox[{"back", " ", "before", " ", "side"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"50", ",", " ", "50", ",", " ", "50"}], "}"}]}], ",", " ", 
    RowBox[{"tin", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "100"}], ",", " ", 
       RowBox[{"-", "100"}], ",", " ", 
       RowBox[{"-", "100"}]}], "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "initial", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"dimensions", " ", "of", " ", "court"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "=", "6.4"}], ";"}], " ", 
   RowBox[{"(*", " ", "width", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "9.75"}], ";"}], " ", 
   RowBox[{"(*", " ", "length", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "5.64"}], ";"}], " ", 
   RowBox[{"(*", " ", "height", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tin", " ", "=", ".0975"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"height", " ", "tin"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "parameters", " ", "for", " ", "range", " ", "of", " ", "good", " ", 
     "boast"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xGood", " ", "=", " ", ".5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yGood", " ", "=", 
     RowBox[{"b", "-", ".5"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"create", " ", "a", " ", "list", " ", "for", " ", "problem"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"problem", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"initial", " ", "angles", " ", "and", " ", "velocity"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta", " ", "=", "1.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phi", "=", ".95"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v", "=", "13"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"position", " ", "of", " ", "boast"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x0", "=", "5.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y0", "=", "1.68"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z0", "=", ".67"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"initial", " ", "velocity", " ", "components"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx0", "=", 
     RowBox[{"v", "*", 
      RowBox[{"Sin", "[", "theta", "]"}], "*", 
      RowBox[{"Cos", "[", "phi", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy0", "=", 
     RowBox[{"v", "*", 
      RowBox[{"Sin", "[", "theta", "]"}], "*", 
      RowBox[{"Sin", "[", "phi", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz0", "=", 
     RowBox[{"v", "*", 
      RowBox[{"Cos", "[", "theta", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"other", " ", "parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"deltaT", " ", "=", ".001"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "=", ".024"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"mass", " ", "of", " ", "squash", " ", "ball"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"c", "=", ".47"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"drag", " ", "coefficient", " ", "of", " ", "a", " ", "sphere"}],
      " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"rho", "=", "1.225"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"density", " ", "of", " ", "fluid", " ", 
       RowBox[{"(", 
        RowBox[{"kg", "/", 
         RowBox[{"m", "^", "3"}]}], ")"}]}], " ", "-", " ", "air"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"r", "=", ".02"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"radius", " ", "of", " ", "ball"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"area", "=", 
     RowBox[{"Pi", "*", 
      RowBox[{
       RowBox[{"(", "r", ")"}], "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"e", "=", ".62"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "coefficient", " ", "of", " ", "restitution", " ", "of", " ", "ball"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"k", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], "*", "c", "*", "rho", "*", "area"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataTotal", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "x0", ",", "y0", ",", "z0", ",", "t", ",", "vx0", ",", "vy0", ",", 
        "vz0"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"use", " ", "Euler"}], "-", 
     RowBox[{
     "Cromer", " ", "Method", " ", "to", " ", "evaluate", " ", "velocities", 
      " ", "and", " ", "positions", " ", "along", " ", "path", " ", "1"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"x0", "\[LessEqual]", "a"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"x", " ", "component"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      RowBox[{"vx1", "=", 
       RowBox[{"vx0", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "k"}], "/", "m"}], ")"}], "*", 
         RowBox[{"Abs", "[", "vx0", "]"}], "*", "vx0", "*", "deltaT"}]}]}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"x1", "=", 
       RowBox[{"x0", "+", 
        RowBox[{"vx1", "*", "deltaT"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"y", " ", "component"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\t", 
      RowBox[{"vy1", "=", 
       RowBox[{"vy0", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "k"}], "/", "m"}], ")"}], "*", 
         RowBox[{"Abs", "[", "vy0", "]"}], "*", "vy0", "*", "deltaT"}]}]}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"y1", "=", 
       RowBox[{"y0", "+", 
        RowBox[{"vy1", "*", "deltaT"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"z", " ", "component"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\t", 
      RowBox[{"vz1", "=", 
       RowBox[{"vz0", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "g"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"k", "/", "m"}], ")"}], "*", 
            RowBox[{"Abs", "[", "vz0", "]"}], "*", "vz0"}]}], ")"}], "*", 
         "deltaT"}]}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"z1", "=", 
       RowBox[{"z0", "+", 
        RowBox[{"vz1", "*", "deltaT"}]}]}], ";", "\[IndentingNewLine]", "\t", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "iterate", " ", "time", " ", "and", " ", "store", " ", "data"}], " ", 
       "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"t", "+=", "deltaT"}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"dataTotal", ",", 
        RowBox[{"{", 
         RowBox[{
         "x1", ",", "y1", ",", "z1", ",", "t", ",", "vx1", ",", "vy1", ",", 
          "vz1"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"update", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\t", 
      RowBox[{"vx0", "=", "vx1"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"x", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"x0", "=", "x1"}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"vy0", "=", "vy1"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"y", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"y0", "=", "y1"}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"vz0", "=", "vz1"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"z", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"z0", "=", "z1"}], ";", "\[IndentingNewLine]", "\t", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"address", " ", "potential", " ", "loops", " ", "problems"}], 
       " ", "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"z0", " ", "\[LessEqual]", " ", "r"}], ",", 
        RowBox[{"problem", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", 
           RowBox[{"-", "10"}], ",", 
           RowBox[{"-", "10"}]}], "}"}]}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "if", " ", "ball", " ", "hits", " ", "floor", " ", "assign", " ", 
        "value", " ", "and", " ", "break"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"problem", " ", "==", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", 
           RowBox[{"-", "10"}], ",", 
           RowBox[{"-", "10"}]}], "}"}]}], ",", " ", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"z0", " ", "\[GreaterEqual]", " ", 
         RowBox[{"h", "-", "r"}]}], ",", 
        RowBox[{"problem", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"25", ",", "25", ",", "25"}], "}"}]}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "if", " ", "ball", " ", "hits", " ", "ceiling", " ", "assing", " ", 
        "value", " ", "and", " ", "break"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"problem", " ", "==", " ", 
         RowBox[{"{", 
          RowBox[{"25", ",", "25", ",", "25"}], "}"}]}], ",", " ", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\t", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "this", " ", "statement", " ", "allows", " ", "it", " ", "so", " ", 
        "the", " ", "loop", " ", "is", " ", "stopped", " ", "when", " ", 
        "the", " ", "center", " ", "of", " ", "the", " ", "ball", " ", "is", 
        " ", "within", " ", "its", " ", "radius", " ", "to", " ", "the", " ", 
        "wall"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x0", " ", ">", " ", 
         RowBox[{"a", "-", "r"}]}], ",", 
        RowBox[{"Break", "[", "]"}], ",", 
        RowBox[{"Continue", "[", "]"}]}], "]"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8158481762823763`*^9, 3.8158482795935373`*^9}, {
   3.8158483950047626`*^9, 3.815848705882717*^9}, {3.8158487817891808`*^9, 
   3.815848920618335*^9}, {3.815848982333232*^9, 3.815849001371139*^9}, {
   3.8158491471318913`*^9, 3.815849182603607*^9}, {3.815849219885353*^9, 
   3.8158492424913797`*^9}, {3.8158492753566513`*^9, 3.815849298779188*^9}, {
   3.8158493579691772`*^9, 3.8158493885230827`*^9}, {3.8158502134552526`*^9, 
   3.815850245420752*^9}, {3.8158503016953*^9, 3.81585033265371*^9}, 
   3.815850381358778*^9, {3.815850440399787*^9, 3.8158505040624638`*^9}, {
   3.8158507980332603`*^9, 3.8158510690383587`*^9}, {3.815851115855493*^9, 
   3.815851207607085*^9}, {3.8158513164176893`*^9, 3.81585131770999*^9}, {
   3.815851416836853*^9, 3.815851435905958*^9}, {3.815851490754364*^9, 
   3.815851520045639*^9}, {3.8158516190587893`*^9, 3.815851678813078*^9}, {
   3.8158520606436663`*^9, 3.81585206079522*^9}, {3.815852119937963*^9, 
   3.815852122063053*^9}, {3.815852212496105*^9, 3.8158522309414463`*^9}, {
   3.815852281967301*^9, 3.815852282509581*^9}, {3.815924154627817*^9, 
   3.81592415646283*^9}, 3.815924192399803*^9, {3.815924285697275*^9, 
   3.81592431727987*^9}, {3.815924351411633*^9, 3.8159243528791113`*^9}, {
   3.815924411616221*^9, 3.815924531424157*^9}, {3.8159247483889847`*^9, 
   3.81592475073772*^9}, {3.815924794737455*^9, 3.815924886081007*^9}, {
   3.815924974592949*^9, 3.815924980545755*^9}, {3.815925075139773*^9, 
   3.8159251275046864`*^9}, {3.815925241348419*^9, 3.815925243922085*^9}, {
   3.815925307042059*^9, 3.8159253431690617`*^9}, {3.815925379267272*^9, 
   3.815925475812233*^9}, {3.8159300773537197`*^9, 3.815930098689395*^9}, 
   3.815930135094308*^9, {3.815930207271494*^9, 3.815930216223744*^9}, {
   3.815930931314704*^9, 3.8159309317730083`*^9}, {3.815936157272339*^9, 
   3.815936171894329*^9}, {3.8159367605713997`*^9, 3.8159367677661057`*^9}, {
   3.815937284859584*^9, 3.815937307351163*^9}, {3.8160190760458*^9, 
   3.8160190774471188`*^9}, {3.816019146817102*^9, 3.816019168665773*^9}, {
   3.816019209296441*^9, 3.8160192459777927`*^9}, {3.816019355615994*^9, 
   3.816019355800665*^9}, 3.81669347102315*^9, {3.8166935011966763`*^9, 
   3.8166935025213127`*^9}, {3.816693541190935*^9, 3.8166935423440247`*^9}, {
   3.8166936349901648`*^9, 3.816693667036278*^9}, {3.816693711343896*^9, 
   3.8166937711644287`*^9}, {3.816701856941453*^9, 3.8167018750475597`*^9}, {
   3.81670210694566*^9, 3.816702121639649*^9}, {3.81670230489282*^9, 
   3.816702350871284*^9}, {3.8167024878841047`*^9, 3.816702506135399*^9}, 
   3.816702800491313*^9, {3.816703447099012*^9, 3.816703450311755*^9}, {
   3.81706024241892*^9, 3.817060257286001*^9}, {3.817060384457004*^9, 
   3.817060410550096*^9}, {3.81706051272793*^9, 3.8170605262859287`*^9}, {
   3.817061809840371*^9, 3.8170618896333103`*^9}, {3.817062780890923*^9, 
   3.81706278492631*^9}, {3.8170628583307*^9, 3.8170628811338177`*^9}, {
   3.817502725302718*^9, 3.817502725607738*^9}, 3.8241668190500517`*^9, {
   3.824167737675233*^9, 3.824167738071231*^9}, {3.824228712163282*^9, 
   3.8242287136632757`*^9}, {3.824229150914233*^9, 3.8242291512482567`*^9}, {
   3.824229287474433*^9, 3.824229287684705*^9}},
 CellLabel->
  "In[636]:=",ExpressionUUID->"d6489b9a-2141-444b-8992-08ff7bd5cc07"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.815924645346629*^9, 3.8159246624781857`*^9}, {
   3.815924873570684*^9, 3.815924910206731*^9}, {3.815936316070355*^9, 
   3.815936369252036*^9}, {3.815936404616515*^9, 3.815936405492206*^9}, {
   3.8159364403754597`*^9, 3.8159364914122257`*^9}, {3.815936531305018*^9, 
   3.8159365490620813`*^9}, {3.815936794504566*^9, 3.815936820294218*^9}, {
   3.81593731547616*^9, 3.8159373246593847`*^9}, {3.815938345989657*^9, 
   3.8159383478418818`*^9}, {3.816018370139401*^9, 3.816018370773431*^9}, 
   3.816693764625145*^9},
 CellLabel->
  "In[659]:=",ExpressionUUID->"dc0a1da6-0ab5-4d4c-bc3d-fd7057def6d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get New Positions and Velocities to start path 2:", "Section",
 CellChangeTimes->{{3.815937375700322*^9, 3.8159373910579147`*^9}, {
  3.815938670384244*^9, 
  3.815938673631961*^9}},ExpressionUUID->"ef474e49-1b8c-4a97-8896-\
924a626d9121"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "positions", " ", "are", " ", "the", " ", "same", " ", "as", " ", "x0"}], 
    ",", " ", "y0", ",", " ", 
    RowBox[{
    "z0", " ", "already", " ", "stored", " ", "from", " ", "previous", " ", 
     "code", " ", "block"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"reset", " ", "initial", " ", "conditions", " ", "velocity"}], 
    " ", "-", " ", 
    RowBox[{
    "multiplied", " ", "by", " ", "coefficient", " ", "of", " ", 
     "restitution"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vx0", "=", 
     RowBox[{
      RowBox[{"-", "e"}], "*", "vx0"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "note", " ", "the", " ", "negative", " ", "sign", " ", "becuse", " ", 
     "of", " ", "the", " ", "plane", " ", "it", " ", "hits", " ", "changes", 
     " ", "directions"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy0", "=", 
     RowBox[{"e", "*", "vy0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz0", "=", 
     RowBox[{"e", "*", "vz0"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.815936836262581*^9, 3.815936934834776*^9}, {
  3.8159369895249157`*^9, 3.815937176775605*^9}, {3.8159372513844233`*^9, 
  3.8159372540668507`*^9}, {3.815937330421085*^9, 3.8159373335075493`*^9}, {
  3.815937699257361*^9, 3.815937715202695*^9}, {3.8159378797468567`*^9, 
  3.8159378885953217`*^9}, {3.815938092084654*^9, 3.815938106579522*^9}, {
  3.815938810418664*^9, 3.815938813968916*^9}, {3.816693812369109*^9, 
  3.816693847257391*^9}},
 CellLabel->
  "In[660]:=",ExpressionUUID->"aa7887e1-c3a6-4019-b042-9fb29efd0254"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Path 2:", "Section",
 CellChangeTimes->{{3.815937387541698*^9, 
  3.81593738917001*^9}},ExpressionUUID->"50c39ab7-3ec4-4b53-9e44-\
85aa14ba9f36"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"y0", "\[LessEqual]", "b"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{"x", " ", "component"}], " ", "*)"}], "\[IndentingNewLine]", 
    "\t", 
    RowBox[{
     RowBox[{"vx1", "=", 
      RowBox[{"vx0", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "k"}], "/", "m"}], ")"}], "*", 
        RowBox[{"Abs", "[", "vx0", "]"}], "*", "vx0", "*", "deltaT"}]}]}], 
     ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"x1", "=", 
      RowBox[{"x0", "+", 
       RowBox[{"vx1", "*", "deltaT"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"y", " ", "component"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"vy1", "=", 
      RowBox[{"vy0", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "k"}], "/", "m"}], ")"}], "*", 
        RowBox[{"Abs", "[", "vy0", "]"}], "*", "vy0", "*", "deltaT"}]}]}], 
     ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"y1", "=", 
      RowBox[{"y0", "+", 
       RowBox[{"vy1", "*", "deltaT"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"z", " ", "component"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"vz1", "=", 
      RowBox[{"vz0", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "g"}], "-", 
          RowBox[{"(", 
           RowBox[{"k", "/", "m"}], ")"}]}], ")"}], "*", 
        RowBox[{"Abs", "[", "vz0", "]"}], "*", "vz0", "*", "deltaT"}]}]}], 
     ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"z1", "=", 
      RowBox[{"z0", "+", 
       RowBox[{"vz1", "*", "deltaT"}]}]}], ";", "\[IndentingNewLine]", "\t", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"iterate", " ", "time", " ", "and", " ", "store", " ", "data"}],
       " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"t", "+=", "deltaT"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"dataTotal", ",", 
       RowBox[{"{", 
        RowBox[{
        "x1", ",", "y1", ",", "z1", ",", "t", ",", "vx1", ",", "vy1", ",", 
         "vz1"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"update", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"vx0", "=", "vx1"}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"x", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     
     RowBox[{"x0", "=", "x1"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"vy0", "=", "vy1"}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"y", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     
     RowBox[{"y0", "=", "y1"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"vz0", "=", "vz1"}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"z", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     
     RowBox[{"z0", "=", "z1"}], ";", "\[IndentingNewLine]", "\t", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"address", " ", "potential", " ", "loops", " ", "problems"}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z0", " ", "\[LessEqual]", " ", "r"}], ",", 
       RowBox[{"problem", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", 
          RowBox[{"-", "10"}], ",", 
          RowBox[{"-", "10"}]}], "}"}]}]}], "]"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "if", " ", "ball", " ", "hits", " ", "floor", " ", "assign", " ", 
       "value", " ", "and", " ", "break"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"problem", " ", "==", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", 
          RowBox[{"-", "10"}], ",", 
          RowBox[{"-", "10"}]}], "}"}]}], ",", " ", 
       RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"y0", " ", ">", 
         RowBox[{"b", "-", " ", "r"}]}], " ", "&&", " ", 
        RowBox[{"z0", " ", "\[LessEqual]", " ", 
         RowBox[{"tin", " ", "+", " ", "r"}]}]}], ",", 
       RowBox[{"problem", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"-", "100"}], ",", 
          RowBox[{"-", "100"}]}], "}"}]}]}], "]"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "if", " ", "ball", " ", "hits", " ", "tin", " ", "assign", " ", "value",
        " ", "and", " ", "break"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"problem", " ", "==", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "100"}], ",", 
          RowBox[{"-", "100"}], ",", 
          RowBox[{"-", "100"}]}], "}"}]}], ",", " ", 
       RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z0", " ", "\[GreaterEqual]", " ", 
        RowBox[{"h", "-", "r"}]}], ",", 
       RowBox[{"problem", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"25", ",", "25", ",", "25"}], "}"}]}]}], "]"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "if", " ", "ball", " ", "hits", " ", "ceiling", " ", "assign", " ", 
       "value", " ", "and", " ", "break"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"problem", " ", "==", " ", 
        RowBox[{"{", 
         RowBox[{"25", ",", "25", ",", "25"}], "}"}]}], ",", " ", 
       RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x0", " ", "<", " ", "0"}], ",", 
       RowBox[{"problem", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "25"}], ",", 
          RowBox[{"-", "25"}], ",", 
          RowBox[{"-", "25"}]}], "}"}]}]}], "]"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "if", " ", "ball", " ", "hits", " ", "side", " ", "wall", " ", "first", 
       " ", "assign", " ", "value", " ", "and", " ", "break"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"problem", " ", "==", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "25"}], ",", 
          RowBox[{"-", "25"}], ",", 
          RowBox[{"-", "25"}]}], "}"}]}], ",", " ", 
       RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "this", " ", "statement", " ", "allows", " ", "it", " ", "so", " ", 
       "the", " ", "loop", " ", "is", " ", "stopped", " ", "when", " ", "the",
        " ", "center", " ", "of", " ", "the", " ", "ball", " ", "is", " ", 
       "within", " ", "its", " ", "radius", " ", "to", " ", "the", " ", 
       "wall"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x0", "<", "0"}], ",", 
       RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"y0", " ", ">", " ", 
        RowBox[{"b", "-", "r"}]}], ",", 
       RowBox[{"Break", "[", "]"}], ",", 
       RowBox[{"Continue", "[", "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.815937451670356*^9, 3.8159374612840652`*^9}, {
   3.8159377505064583`*^9, 3.8159377777001143`*^9}, {3.815937834629649*^9, 
   3.815937859460318*^9}, {3.815937891092187*^9, 3.815937891556367*^9}, {
   3.815937929350478*^9, 3.815937937540422*^9}, {3.8159379736078663`*^9, 
   3.815938021267943*^9}, {3.8159381870798388`*^9, 3.815938203588829*^9}, {
   3.815938269655382*^9, 3.8159382741434298`*^9}, {3.8159383181131697`*^9, 
   3.8159383351045523`*^9}, {3.816017491102014*^9, 3.816017532310116*^9}, {
   3.816017568905444*^9, 3.8160175732100782`*^9}, {3.816017853969252*^9, 
   3.816017937047944*^9}, {3.816017972505993*^9, 3.8160180334314957`*^9}, {
   3.816018349897868*^9, 3.816018350342835*^9}, {3.8166938583234243`*^9, 
   3.816693886933577*^9}, {3.8166939571726522`*^9, 3.8166939599067383`*^9}, {
   3.816694063222095*^9, 3.816694072275361*^9}, {3.8166941023101177`*^9, 
   3.81669410493358*^9}, {3.816694140088333*^9, 3.81669415381946*^9}, 
   3.816705940616414*^9, {3.817060280503536*^9, 3.8170603755226383`*^9}, {
   3.817060544835333*^9, 3.817060548481616*^9}, {3.817502768969928*^9, 
   3.817502769146456*^9}},
 CellLabel->
  "In[663]:=",ExpressionUUID->"26c43da1-e1bf-479f-bc1d-278ab4308401"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get New Positions and Velocities to start Path 3:", "Section",
 CellChangeTimes->{{3.8159386602255096`*^9, 
  3.8159386808159027`*^9}},ExpressionUUID->"77dc45aa-068c-4051-8c2e-\
9895ea132e86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "positions", " ", "are", " ", "the", " ", "same", " ", "as", " ", "x0"}], 
    ",", " ", "y0", ",", " ", 
    RowBox[{
    "z0", " ", "already", " ", "stored", " ", "from", " ", "previous", " ", 
     "code", " ", "block"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"reset", " ", "initial", " ", "conditions", " ", "velocity"}], 
    " ", "-", " ", 
    RowBox[{
    "multiplied", " ", "by", " ", "coefficient", " ", "of", " ", 
     "restitution"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vx0", "=", 
     RowBox[{"e", "*", "vx0"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy0", "=", 
     RowBox[{
      RowBox[{"-", "e"}], "*", "vy0"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "note", " ", "the", " ", "negative", " ", "sign", " ", "becuse", " ", 
     "of", " ", "the", " ", "plane", " ", "it", " ", "hits", " ", "changes", 
     " ", "directions"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz0", "=", 
     RowBox[{"e", "*", "vz0"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.81593870041932*^9, 3.815938723648526*^9}, {
   3.815938776725058*^9, 3.815938804480192*^9}, 3.815939371892356*^9, {
   3.8166941744928293`*^9, 3.816694196328266*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"281ebb40-79df-4d1f-ab06-1322ec5542a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Path 3:", "Section",
 CellChangeTimes->{{3.815938848897468*^9, 
  3.815938850447702*^9}},ExpressionUUID->"b5df3012-15e3-4cd0-9664-\
62cc325372ad"],

Cell[BoxData[
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"x0", "\[GreaterEqual]", " ", "0"}], ",", "\[IndentingNewLine]", 
   "\t", 
   RowBox[{"(*", " ", 
    RowBox[{"x", " ", "component"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"vx1", "=", 
     RowBox[{"vx0", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "k"}], "/", "m"}], ")"}], "*", 
       RowBox[{"Abs", "[", "vx0", "]"}], "*", "vx0", "*", "deltaT"}]}]}], ";",
     "\[IndentingNewLine]", "\t", 
    RowBox[{"x1", "=", 
     RowBox[{"x0", "+", 
      RowBox[{"vx1", "*", "deltaT"}]}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{"y", " ", "component"}], " ", "*)"}], "\[IndentingNewLine]", 
    "\t", 
    RowBox[{"vy1", "=", 
     RowBox[{"vy0", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "k"}], "/", "m"}], ")"}], "*", 
       RowBox[{"Abs", "[", "vy0", "]"}], "*", "vy0", "*", "deltaT"}]}]}], ";",
     "\[IndentingNewLine]", "\t", 
    RowBox[{"y1", "=", 
     RowBox[{"y0", "+", 
      RowBox[{"vy1", "*", "deltaT"}]}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{"z", " ", "component"}], " ", "*)"}], "\[IndentingNewLine]", 
    "\t", 
    RowBox[{"vz1", "=", 
     RowBox[{"vz0", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "g"}], "-", 
         RowBox[{"(", 
          RowBox[{"k", "/", "m"}], ")"}]}], ")"}], "*", 
       RowBox[{"Abs", "[", "vz0", "]"}], "*", "vz0", "*", "deltaT"}]}]}], ";",
     "\[IndentingNewLine]", "\t", 
    RowBox[{"z1", "=", 
     RowBox[{"z0", "+", 
      RowBox[{"vz1", "*", "deltaT"}]}]}], ";", "\[IndentingNewLine]", "\t", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{"iterate", " ", "time", " ", "and", " ", "store", " ", "data"}], 
     " ", "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{"t", "+=", "deltaT"}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"dataTotal", ",", 
      RowBox[{"{", 
       RowBox[{
       "x1", ",", "y1", ",", "z1", ",", "t", ",", "vx1", ",", "vy1", ",", 
        "vz1"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", " ", 
     RowBox[{"update", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
    "\t", 
    RowBox[{"vx0", "=", "vx1"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"x", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{"x0", "=", "x1"}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"vy0", "=", "vy1"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"y", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{"y0", "=", "y1"}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"vz0", "=", "vz1"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"z", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{"z0", "=", "z1"}], ";", "\[IndentingNewLine]", "\t", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"address", " ", "potential", " ", "loops", " ", "problems"}], 
     " ", "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"z0", " ", "\[LessEqual]", " ", "r"}], ",", 
      RowBox[{"problem", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", 
         RowBox[{"-", "10"}], ",", 
         RowBox[{"-", "10"}]}], "}"}]}]}], "]"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "if", " ", "ball", " ", "hits", " ", "floor", " ", "assign", " ", 
      "value", " ", "and", " ", "break"}], " ", "*)"}], "\[IndentingNewLine]",
     "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"problem", " ", "==", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", 
         RowBox[{"-", "10"}], ",", 
         RowBox[{"-", "10"}]}], "}"}]}], ",", " ", 
      RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
    
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"z0", " ", "\[GreaterEqual]", " ", 
       RowBox[{"h", "-", "r"}]}], ",", 
      RowBox[{"problem", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"25", ",", "25", ",", "25"}], "}"}]}]}], "]"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "if", " ", "ball", " ", "hits", " ", "ceiling", " ", "assign", " ", 
      "value", " ", "and", " ", "break"}], " ", "*)"}], "\[IndentingNewLine]",
     "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"problem", " ", "==", " ", 
       RowBox[{"{", 
        RowBox[{"25", ",", "25", ",", "25"}], "}"}]}], ",", " ", 
      RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
    
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"y0", "\[LessEqual]", "0"}], ",", 
      RowBox[{"problem", "=", 
       RowBox[{"{", 
        RowBox[{"50", ",", "50", ",", "50"}], "}"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"problem", " ", "==", " ", 
       RowBox[{"{", 
        RowBox[{"50", ",", "50", ",", "50"}], "}"}]}], ",", " ", 
      RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "this", " ", "statement", " ", "allows", " ", "it", " ", "so", " ", 
      "the", " ", "loop", " ", "is", " ", "stopped", " ", "when", " ", "the", 
      " ", "center", " ", "of", " ", "the", " ", "ball", " ", "is", " ", 
      "within", " ", "its", " ", "radius", " ", "to", " ", "the", " ", 
      "floor"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"y0", "<", "0"}], ",", 
      RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
    
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x0", " ", "<", " ", "r"}], ",", 
      RowBox[{"Break", "[", "]"}], ",", 
      RowBox[{"Continue", "[", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.815938998549449*^9, 3.81593915392092*^9}, {
   3.815939260277281*^9, 3.81593934341035*^9}, {3.815939379774557*^9, 
   3.815939410578898*^9}, {3.816018058620488*^9, 3.8160181092597237`*^9}, {
   3.8160182534661627`*^9, 3.816018308136629*^9}, {3.816018341193593*^9, 
   3.8160183421023607`*^9}, 3.816018436794236*^9, {3.816018676300511*^9, 
   3.8160187172874804`*^9}, {3.816018845149002*^9, 3.816018845879408*^9}, {
   3.816018896972488*^9, 3.816018900469885*^9}, {3.816694211177603*^9, 
   3.816694245350466*^9}, {3.81669429096015*^9, 3.8166943570878277`*^9}},
 CellLabel->
  "In[667]:=",ExpressionUUID->"87a1a640-cfa7-406b-8138-58525a3fad34"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extract Final Position:", "Section",
 CellChangeTimes->{{3.816018937621911*^9, 
  3.8160189441314993`*^9}},ExpressionUUID->"7e5488e3-1b46-439d-91da-\
4b6002357bbc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finalPosition", "=", 
  RowBox[{"dataTotal", "[", 
   RowBox[{"[", 
    RowBox[{"Length", "[", "dataTotal", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816018952085688*^9, 3.8160189607402897`*^9}, {
  3.8160190038949947`*^9, 3.816019030659881*^9}, {3.816694381800263*^9, 
  3.816694392016054*^9}},
 CellLabel->
  "In[668]:=",ExpressionUUID->"6f017b82-a9ae-4049-9e98-62dc9c8edfe5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.018263562826515388`", ",", "7.192133384644511`", ",", 
   "1.7350532860917443`", ",", "2.050999999999885`", ",", 
   RowBox[{"-", "2.4108836630813175`"}], ",", 
   RowBox[{"-", "3.2296357188026663`"}], ",", "0.03885235737514551`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.816019021299314*^9, 3.8160190319028473`*^9}, 
   3.816019079403638*^9, {3.816019148939355*^9, 3.816019170758415*^9}, {
   3.816019211687643*^9, 3.816019248897962*^9}, 3.816019358988345*^9, 
   3.816694413419558*^9, 3.816696345696612*^9, 3.816701877477339*^9, 
   3.816702123777728*^9, {3.816702325528166*^9, 3.8167023538543873`*^9}, 
   3.8167025080093937`*^9, 3.816702802248292*^9, 3.816702864589904*^9, 
   3.816703453065765*^9, 3.816707846291156*^9, 3.816718921489786*^9, 
   3.816719199653596*^9, 3.817060845401269*^9, 3.817060911820643*^9, 
   3.817062540692586*^9, 3.817062638092332*^9, 3.817062861011978*^9, 
   3.8170630295272627`*^9, 3.817500905020355*^9, 3.824167741537932*^9, 
   3.824167955724186*^9, 3.824228685398109*^9, 3.8242287172745132`*^9, 
   3.824228789801108*^9, 3.824228890036275*^9, 3.8242291624549217`*^9, 
   3.8242292942338247`*^9},
 CellLabel->
  "Out[668]=",ExpressionUUID->"005bc185-c836-4274-a81a-188baec6f9c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final Plots:", "Section",
 CellChangeTimes->{{3.815939465425699*^9, 3.815939469807225*^9}, {
  3.816702888326212*^9, 
  3.816702909202834*^9}},ExpressionUUID->"b1d76950-499b-409a-bea6-\
9814c803fe66"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dataPosition", "=", 
    RowBox[{"Drop", "[", 
     RowBox[{"dataTotal", ",", "None", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "7"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"lines", " ", "on", " ", "singles", " ", "court"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tCross", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "4.21", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6.4", ",", "4.21", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tMiddle", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.2", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.2", ",", "4.21", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leftBox", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.6", ",", "4.21", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.6", ",", "2.61", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "2.61", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rightBox", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4.8", ",", "4.21", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.8", ",", "2.61", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6.4", ",", "2.61", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tin", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "9.75", ",", ".48"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6.4", ",", "9.75", ",", ".48"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"service", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "9.75", ",", "1.78"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6.4", ",", "9.75", ",", "1.78"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"top", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "9.75", ",", "4.57"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6.4", ",", "9.75", ",", "4.57"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"backTop", " ", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "2.13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"6.4", ",", "0", ",", "2.13"}], "}"}]}], "}"}], "]"}]}], 
      "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "currently", " ", "not", " ", "in", " ", "plot", " ", "for", " ", 
    "aesthetics"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"leftHeight", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "2.13"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "9.75", ",", "4.57"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rightHeight", " ", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Red", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6.4", ",", "0", ",", "2.13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"6.4", ",", "9.75", ",", "4.57"}], "}"}]}], "}"}], "]"}]}],
       "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"lines", " ", "representing", " ", "good", " ", "shots"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineNick", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"Darker", "[", "Green", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "9.75", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"boxGood", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", 
       RowBox[{"Darker", "[", "Yellow", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "9.75", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "yGood", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xGood", ",", "yGood", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xGood", ",", "9.75", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "path", " ", "and", " ", "court"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"path", " ", "=", " ", 
    RowBox[{"ListPointPlot3D", "[", 
     RowBox[{"dataPosition", ",", 
      RowBox[{"PlotRange", " ", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "a"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "b"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "h"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", "  ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<x (meters)\>\"", ",", "\"\<y (meters)\>\"", " ", ",", 
         "\"\<z (meters)\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", " ", "\[Rule]", " ", 
       "\"\<Position of Ball Along Boast Path (theta = 1.4, phi = .95, v = 8)\
\>\""}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
   "path", ",", "tCross", ",", "tMiddle", ",", "leftBox", ",", "rightBox", 
    ",", " ", "tin", ",", "service", ",", " ", "top", ",", "leftHeight", ",", 
    "rightHeight", ",", "lineNick", ",", "boxGood"}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"create", " ", "data", " ", "tables", " ", "for", " ", "x"}], ",",
     " ", 
    RowBox[{"y", " ", "and", " ", "z", " ", "over", " ", "time"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "x", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xTime", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"j", "\[LessEqual]", 
     RowBox[{"Length", "[", "dataTotal", "]"}]}], ",", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"xTime", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dataTotal", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", 
         RowBox[{"dataTotal", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"j", "+=", "1"}]}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "y", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yTime", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"j", "\[LessEqual]", 
     RowBox[{"Length", "[", "dataTotal", "]"}]}], ",", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"yTime", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dataTotal", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", 
         RowBox[{"dataTotal", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"j", "+=", "1"}]}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "z", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zTime", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"j", "\[LessEqual]", 
     RowBox[{"Length", "[", "dataTotal", "]"}]}], ",", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"zTime", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dataTotal", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "4"}], "]"}], "]"}], ",", 
         RowBox[{"dataTotal", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "3"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"j", "+=", "1"}]}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"look", " ", "at", " ", "graphs", " ", "together"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xGraph", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"xTime", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
     RowBox[{"PlotLabels", " ", "\[Rule]", 
      RowBox[{"{", "\"\<X\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yGraph", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"yTime", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotLabels", " ", "\[Rule]", 
      RowBox[{"{", "\"\<Y\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zGraph", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"zTime", ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
      RowBox[{"PlotLabels", " ", "\[Rule]", 
       RowBox[{"{", "\"\<Z\>\"", "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"xGraph", ",", "yGraph", ",", "zGraph", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "3.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", " ", "\[Rule]", " ", 
    "\"\<Position in X, Y, and Z Over Time (theta = 1.2, phi = .95, v = 13)\>\
\""}], ",", " ", 
   RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Time (seconds)\>\"", ",", " ", "\"\<Location (meters)\>\""}], 
     "}"}]}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.8159394727453403`*^9, 3.815939482464026*^9}, {
   3.816018330342476*^9, 3.8160183794940453`*^9}, {3.816694433251555*^9, 
   3.816694536974118*^9}, {3.816694594001099*^9, 3.81669463335851*^9}, {
   3.816694737346678*^9, 3.8166948202224493`*^9}, 3.8166950616680927`*^9, {
   3.8166953165621243`*^9, 3.816695346479373*^9}, {3.816695393250983*^9, 
   3.816695452955648*^9}, 3.81669552829491*^9, 3.816695573296177*^9, {
   3.816702898776939*^9, 3.816702899732787*^9}, {3.8167029789825983`*^9, 
   3.8167030171400948`*^9}, {3.816703056677293*^9, 3.816703065139511*^9}, {
   3.816703104581461*^9, 3.816703105571158*^9}, {3.816703178151169*^9, 
   3.816703327064595*^9}, {3.8167033654302387`*^9, 3.81670341225033*^9}, {
   3.816703474182837*^9, 3.816703487859604*^9}, {3.8167035231570873`*^9, 
   3.816703542692441*^9}, {3.8167036073381166`*^9, 3.81670374669116*^9}, {
   3.816703778682712*^9, 3.8167038023874903`*^9}, {3.816705340152103*^9, 
   3.8167053458422737`*^9}, {3.816705516872254*^9, 3.816705518722301*^9}, {
   3.816705967178977*^9, 3.8167059750759277`*^9}, {3.81670613939233*^9, 
   3.8167061566708527`*^9}, {3.816706209268868*^9, 3.816706217390733*^9}, {
   3.8170610463574667`*^9, 3.8170610470361853`*^9}, {3.818598868791319*^9, 
   3.818598870644948*^9}, {3.818598942270027*^9, 3.818598959027021*^9}, {
   3.818599038645792*^9, 3.8185990397653217`*^9}, {3.818599462575592*^9, 
   3.81859947408619*^9}, 3.818599530106042*^9, {3.8185998452404222`*^9, 
   3.818599859272643*^9}, {3.818599892530656*^9, 3.818599962445117*^9}, {
   3.818599998734133*^9, 3.8186000218734493`*^9}, {3.8186002154213457`*^9, 
   3.818600224828059*^9}, {3.8186004932061357`*^9, 3.818600541778286*^9}, 
   3.818600572074885*^9, {3.8186006731328087`*^9, 3.8186006792757263`*^9}, {
   3.818600914604773*^9, 3.818600919496047*^9}, {3.818600981748592*^9, 
   3.8186009950749083`*^9}, {3.818601153071436*^9, 3.818601167227606*^9}, {
   3.818601212731966*^9, 3.8186012221613073`*^9}, {3.818601268087833*^9, 
   3.818601277288578*^9}, {3.8186013682535067`*^9, 3.818601369940424*^9}, {
   3.818601403321718*^9, 3.818601411128519*^9}, {3.818601481014696*^9, 
   3.818601492591061*^9}, {3.818601591383037*^9, 3.818601674753915*^9}, {
   3.818601740156467*^9, 3.818601807796406*^9}, {3.818601852908616*^9, 
   3.8186018562071333`*^9}, {3.8186019499787483`*^9, 3.81860195282432*^9}, {
   3.823704216865543*^9, 3.823704222010808*^9}, {3.824167907687478*^9, 
   3.824167952131947*^9}, {3.824228682898135*^9, 3.8242286833985643`*^9}, {
   3.82422878717139*^9, 3.824228788156147*^9}, {3.824228887542947*^9, 
   3.824228888544259*^9}, {3.8242291609163837`*^9, 3.824229161117865*^9}, {
   3.824229292302107*^9, 3.824229292785877*^9}},
 CellLabel->
  "In[669]:=",ExpressionUUID->"c4069fea-d30a-41de-8d14-723cb57b1774"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0, 0, 1], PointSize[0.009722222222222222], 
     Point3DBox[CompressedData["
1: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
ejI7EVwLPtDrg/C6vf512HyQCrc8fqbf4yWCV+JKdMllFvotVR+I/aECaXk1
8K4wETZoKhdkXWWhAP/fJY9+UWFKMUDlDomI67Ivt2NCWahJbAPXoZ9U0E5A
zYkMIqwtiaqdDWehP84RbovtVOB466SfsIkIu/rg8bFIFipoJv7IbKGCjFJX
crwsER5OXv+jGs1CWpUNJ4waqXDm9rP6m9uJ8MOGfYp6nYXS03PnZuuocMe1
szNuDxEOFhV9W4hhob7G5+np1VTYpuVQHaNGhD/bbie1xrHQ9rffrQwqqPDk
mV7cNW0ixA+EqTy7yUKZ9TIy02VU8EXX90TpEUHj4IkPYfEs5HEyhTO1hArV
sTtKwo2J0HHozy7rBBZ6t7RrcX8RFZo2qFBDDxOh7U1tgkISC30bGGNN5FPh
flTWsSuWRFg6lz+8coeF5pLrRZKfUkHW0u9s0Aki3Gzfrtp4j4VOXqpX1c2h
gpZEntdFZyIQf34OS0lhoctTo2fHH1DhgYcxBHgQ4ZjfUrNrGgsluCh+uJtO
hZmGowtnfYkgVbtRekcGfo+04yUgmQpv2hqifP2JEHEqNWThPgtpDxFujCVS
wU6kYMErkAh3XhWOlz3A56vulcjdW1TYK7oO7iFEYPVlnbrykIU+HwjIRrFU
OOv68ZRLFBHYvFLYUDYLCbdYHByLosLOtEU/hzgihG97W/QvB//fejPOu2F4
3fbftzqeQISzuaTw8icspJ7m0YyuUIEwXka3SibCXtOi85eespDui4znY5eo
MCBt+vbIfSJ8S429rfSMhUp9JtPuBlDh7iUbFdNsIkzY3egce47vNx3bDDhL
hdKg3/FGeUS4N37P5GEBfl/iel+Oe+N9Kf39We8lEcQsr85bvsT5/CHk+z0P
KlAqjv/WKSGC3z2Bb3xFLETRUhfe70qFOQmrVvX3RNBsYo6VFbPQr7OC1pMO
VAh3bMtS/kiEMc8lXa/XLGRZu1iccpwKbdRms12f8XqeeN5NfcNC5g+Ym/Wt
cLzFtFu+iQgyxoVvq0tZ6PEpsYfTR6hgS7fQk2knQvabpF6fMhZSikd7002p
IHf1V8zGLpxXal0WlPf4HJ2P/HHAmApdt6YK6L1EMErFKOXlLHTnWs/NOX0q
YD9iXhIHiaBMdFV0rmChQztMrTKBCrNDL28JjRPB2yswlauKhdhbW3Yf1MLn
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
wPr353nX/GQS8XdJwx/RUxgid7lSZmDjceeXRj+YJFF6uGYa/cY3s/CFqBlw
adml/fIbkyienc8UM8c+ZMOGqv7gGRhXvbL4uxz3PeJ74Dl0L28ZZoP3DHDa
SqQrf2WSh67Wlx6hB6WXeX1xngHLPV5mIaU4/uO2A4XoNL5S7qzbM1Cqb0l1
f2aSb5rCS6bQA/ZIxidcw/eqaevc+wnPobx4ieglvC8859UJuTADCzdakx2L
mWR5I5ezLnpTrzb14OwMMAWu3Pr2kUkYCXkHvNF9Hy1nv3VyBnpDXJSFCnEc
0aP9eei9wqL/mR2dgYmfYozL+UzypS4mcBz9LJW+5szBGZiMOfs3M5dJVss2
7Be5zAITKu6Q0t4ZeNKzvp39/9+j+95bcxrdMZHNdb/YDATfNCnVes8kVasr
r3qi75X/1rZFeAYidslkPs9ikkKX4MUP6H8t/p1av3YGjIYjkkffMYltpLTX
CLpF3tNOjhU4jpdXjNxbXIeODysZV7CfzIn2nF+chulu9miv10zCLBP200I3
GuU7NjA9DVL1XPENGUwiX2nC6Y6+vKNLuGlwGlbLP03bks4kxjbed7PQAzcx
eMvbp+HwZHae7Uvcx+1h/QPoEduL+XPrpsG9yriqKJVJ1to8OrnJggX5jysk
X1ZMw5P3QcOrUpjkZvHlDHX0iO6D1yKLpkHWVZPHKIlJ3EN3czuj18auyvfL
ngZx7vC9LxOYpP5iu9Eb9DX6x8Wc06Zh185r+n/icJxkh7QedFZIf5JN3DQs
+/TVRyWWSTrqOOfWX2UBtA4eNg2fhptpr4tCo5lE4KKrzHF0vxyNmdP+03Dk
0+bFniiM92+jN++hP8sWLDz2AOfTw1CQjMR4dz3xIg2dMjoaK3NvGuiDCe4u
T/F9Wc9a2tFrpasjxW2mIS8982dlOJNUvuxevvYa3u9+FL0WvjQN7as1ROhh
TCLMwxQ/il7+Ym3bSsNpOD1sY38tlEn+eOmo3EYPOvdJZOmpaRjaSK/PCWaS
N88enE9GDzWpd5pWmYbrdqdkuB4zCVdWxo1m9Dh1ldlehWnI7loTrRuI50el
3pHXEutg0ka3RqlpCJI6x5fozyTcn/+4K6Cv+318e4X4NNQe3+4848skMZH0
B9fRqW+N/fnUNJz6z2VB8RF+ruIRp1h0t9TPBa/WT0PvLtPbgd5MclnUwrYW
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

      "]]}, {}, {}, {}, {}}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{0, 4.21, 0}, {6.4, 4.21, 0}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{3.2, 0, 0}, {3.2, 4.21, 0}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{1.6, 4.21, 0}, {1.6, 2.61, 0}, {0, 2.61, 0}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{4.8, 4.21, 0}, {4.8, 2.61, 0}, {6.4, 2.61, 0}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{0, 9.75, 0.48}, {6.4, 9.75, 0.48}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{0, 9.75, 1.78}, {6.4, 9.75, 1.78}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{0, 9.75, 4.57}, {6.4, 9.75, 4.57}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{0, 0, 2.13}, {0, 9.75, 4.57}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    Line3DBox[{{6.4, 0, 2.13}, {6.4, 9.75, 4.57}}]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
    Line3DBox[{{0, 0, 0}, {0, 9.75, 0}}]}, 
   {RGBColor[
     NCache[
      Rational[2, 3], 0.6666666666666666], 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
    Line3DBox[{{0, 9.75, 0}, {0, 9.25, 0}, {0.5, 9.25, 0}, {0.5, 9.75, 0}}]}},
  
  Axes->True,
  AxesLabel->{
    FormBox["\"x (meters)\"", TraditionalForm], 
    FormBox["\"y (meters)\"", TraditionalForm], 
    FormBox["\"z (meters)\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{351.1109686071977, 206.6450026207016},
  ImageSizeRaw->Automatic,
  PlotLabel->FormBox[
   "\"Position of Ball Along Boast Path (theta = 1.4, phi = .95, v = 8)\"", 
    TraditionalForm],
  PlotRange->{{0, 6.4}, {0, 9.75}, {0, 5.64}},
  PlotRangePadding->{{Automatic, Automatic}, {Automatic, Automatic}, {
    Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.4118096589899087`, -2.5835694237323605`, 1.6679216167248503`},
  
  ViewVertical->{0.1658036037346524, -0.04760822665658143, 
   2.4625223625167574`}]], "Output",
 CellChangeTimes->{
  3.8167030670134697`*^9, 3.816703106449345*^9, {3.816703302073929*^9, 
   3.816703318620202*^9}, 3.816703360775175*^9, {3.816703393957896*^9, 
   3.816703412986635*^9}, 3.816703453209414*^9, 3.8167034885127363`*^9, {
   3.816703524323442*^9, 3.816703543297222*^9}, {3.816703724885229*^9, 
   3.8167037487664948`*^9}, 3.816703804630198*^9, 3.816705076444003*^9, 
   3.816705348837573*^9, 3.816705521127158*^9, 3.816706163215866*^9, {
   3.816706211485086*^9, 3.816706218063044*^9}, 3.8167078464825497`*^9, 
   3.816718922434922*^9, 3.816719199805644*^9, 3.81706084641814*^9, 
   3.817060911986215*^9, 3.817062541401334*^9, 3.8170626382517548`*^9, 
   3.817062861125778*^9, 3.8170630296468897`*^9, 3.8175009054341497`*^9, {
   3.818599475177833*^9, 3.818599482719717*^9}, 3.818599537014982*^9, 
   3.818599861712409*^9, 3.818599893540502*^9, {3.8186000008857327`*^9, 
   3.818600022809112*^9}, 3.818600227015852*^9, 3.818600542604846*^9, 
   3.818600680292305*^9, 3.8186009201081057`*^9, 3.818601009454856*^9, {
   3.818601157605524*^9, 3.818601168526101*^9}, {3.818601214969049*^9, 
   3.818601222800441*^9}, 3.818601280492119*^9, 3.8186014146714*^9, 
   3.818601494120379*^9, {3.818601790168024*^9, 3.8186018085884857`*^9}, 
   3.818601856960223*^9, 3.818601953960988*^9, 3.824167742298629*^9, 
   3.824167956011291*^9, 3.824228685633627*^9, 3.8242287174588127`*^9, 
   3.8242287901326447`*^9, 3.8242288902852993`*^9, 3.824229162684565*^9, 
   3.82422929442558*^9},
 CellLabel->
  "Out[683]=",ExpressionUUID->"8842d5ea-6351-43db-8023-03deb5ba38f7"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.004583333333333334], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJw023VYVE8XB3C6Y3sXBbs7URT9jt2dmJioiK3YqKD+7C7sThQxULHFAKSl
u7sWlkbe3fOO/OPDs+zdO3NnzufMOWvLxWunLtPR0tLSM9LS0vz778ck5va6
QSYSVv+wLGLC4snQ9t0XuUn473dHGMja6j1RSFjt7lXvN51ZAbdnx3Qymv97
fR08B38KsWovYTskT0elbd+Esbvfr5jc7d/fb8W4jv+FHegrYdvy2vU0erIT
zWvbGHyw//f+PbB8fM64fJiE2adMOnZhzT50rkyM7zBOwnbS9Tww7lzDtgVT
Jez9GDOdzgcPwGJobfYZB/X76fr/Ie5VVMsAR/X7X/7a8vH6YcQ+PN3pr5P6
/fR5R6EV01u791r1+5vtL5jy5jjMKv3uOm2RsL/0+Sfh9qmr4souCbvm38J7
w4pTuFVwZHaYh4QNpvs5jYO94pbrHZWw5Br6QOiPVwzrf0bCdtP9ncWHknFF
zp4S1qx7UhuDvecgjdqy7PpNCftI93se9i8uP454IGELlg7UXBHth3z4pO+t
/ny63EWc7Zt8s7+v+vMv0Q+MRmlPdf6o/nwajydCO3cMu/pd/fkhVdMy7l5G
/aXZ1mG/1Z9P47sC51GnbXX+qD9fb6ZFV5+r+JgX26xPgvrzabzX4GjbPWpZ
uvrz7eiCcE+/4HAhT8Iaafw30PK29MmvUgmb1O/QEMesG6jt8vh3TZWEXaf5
uImLfeb6dWqUsJIpb9RXvIlxazpsnWsgZaD5uYXOx6W6R82l7MTqnLqHZbdg
NbrtvPcSKUuh+bqN95PmuBc2lbLuB2VxIVW34THbd6t1aylzo/m7g4dS2I/v
JGWhN0e8Lm+4g04DKoJ39JSy5jSfdxG8Na7r4/5StlY9Wwq9e2jlUTY3HlL2
ieb3HvZYYLbxKCmzpHV8HwaB/q36T5SyhTTf9+G5Yr/f8hlS9kwzXMEDFF52
b3VunpQ10vw/wAbp11nflkjZJM3lZA/hfGDY3LJVUnadHsdDJF836dp8g5SV
aKbb+hEuiZoEj9+mHj9N5yP0ObFp4PY96vGrZy+s1WNY/LDeev+gevz0vB5j
kpPU/c9x9fjnnfiq6vAE2a0WzdM+rx4/Pb8nOPxAR6/bVfX41Vdr0t0L7+/X
b5tzRz1+ep5e+BY65eOBx+rxnyraib5P8TxUL9zHRz1+er5PMX+mwif5rXr8
T6znLB34DCtFJxaZfFGPn573Mwz2cU7p+0vKZqkXj/qRwiLTu/OiUCl//t6I
nLFo5NFoKbuvnr2Y296Y/Mqtu2+SlK8Hb1h6W+SkZUpZVcOfrXntnmNpucDF
rFDK18dzOHc59MW2XMpGHdEsgOcwMtqe6Vgr5evlOXJ7ZUcd1paxCwoaEPY4
hJ17aSTj68cHFh0Gtkm2lLEcuj0fXBrbca+hXMbXkw9KV1990qOZjPXrrfl5
gccDPO85tJXx9fUCnRe2Wruvi4wd/ByoXkEvcHF/f4PHvWV8vb1A1uwU58gB
Mhajfvqz7V7it7vVjbohMr7+XiLcO+9W6zEy1j5Bc8GXwOGpm8ZNlvH1+BJd
3s2UbJwlY64rNA/gFbbkV+/zXCDj6/MVvvkP/PxlmYz9VHVQP+FXcFe2/J27
WsbX62sUWz+9Z7lJxuTudIPQL0qfZLtDxtfva5wx/fZz3j4Zc9Lc3a/X6Nxy
ioX7IRlfz77oGH2i9cOTMuZ7teT+j3G+8InYaxh6QcbXty9efez4ruKajBl2
1gzYF3lDDg9sck/G1/sbhOreOwIvGZv1hhYMvB+7PVr6UsbX/xtcS7W6eMhP
xu5rhvvnDbaMcZ3+9KuM74e3SDzqmRIRIGNVmsvNfgtMOWBXFSbj++Mtou0H
LW4aK2OjNMs/4S1uqr44IEXG98s7OLeUt1iSrX7+muW74B1+LMOrA0Uyvn/e
QbBikNWjCvXz3655IO+wJlg8PrhOxveTH0IHfJ9QqiNn/Yw0C9wPhdOnNxOb
yPn+8sPIz98+9BXK2cFzw9Qr0A8dW8q6zFbI+X57j0dNJ67c3lzOYlrRA8aD
aWs2X2kn5/vvPQJXb5v8sauctddE/6L32GuyoTalj5zvxw8wCpuzUdtezlw1
22PdByx1tPVrNUzO9+cHLFlgGDFsrJz91Dzd8g+4sjrMd+kUOd+vH7G+69nV
+2fLmXw2bUiYDZtRenehnO/fj1gySTbsx3I5c9JMX81H9K6IW5rtIuf7+RP0
Im/NMNgsZ76a29v5CR2PbZS22ynn+/sT3n+beGeEu5zpkuafcUfeT2fZYTnf
759xomP37h6n5Ozxj3HqHf0ZlZfsOt++KOf7/zOsjR0qv1yXs2nq3Shy/wwL
+cmTqffkPB58xq0laTV/veSsTqOP/2dsOz6pl80rOY8Pn/HXNslu4Hs5u91E
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
/xQwd3SQjC0jT6Nx+fJ9ZdmPf/WNGKQFPb58+auMvSVfY9D5TdTMER9lPJ+O
wbVfbdqUvJUxc/I2Bk7LLupeevWvHhKDd5XdVUOfy9gi8jcGEZn51YVPZDzf
joHywi+LCw9k7BV5HINlW3/ZDrnzr34Sg53FeesKrsuYMfkcg1OLu3w4d1nG
8/EY6A060ZRdkLH55HUMBmULj+af/ldvicGTHy8szh2Xsefkdwx+jtx0G4dl
PF+PgXno1LH5+2VMnzyPhd6vibrn9v6rz8TCztMpBLtkzIE8j8WQp1ce52+V
8Xw+Fr6rizzPbZIxL/I8FhjscIWt+1fPiYXHkZRnBc4ypv1Ic8FY9P/gFnXe
Scbz/VhI7e3Mhy6RsRnkeSwS15nOKlrwr/4Tixn+Kp+Lc2TsIXkei8nXq1oM
nynj54FY3F0luFkyRcYayPNY9DqB3pcn/KsXxSJps0fMyDEyNoU8j8XZg8nH
lMNl/LwQi/FdJ8y8xmTsLnkeB+2w0B5j7f/Vl+LwOnaZTWU/Gashz+Pg6m1h
fau3jJ8n4jDzc0CXid1lbAJ5HgeX9ecn1Xb6V4+KQ1KXTR732snYTfI8DiFz
FwdNbSXj5404rHdybNNoI2Mq8jwODW9cTjy2+le/ioP320Nms6UyNoY8j0N4
xIvLekIZP4/EwculwP65mYxdJc/jcKm8e+l8o3/1rjgog/e8MtGTsTLyPA5N
licd9W2U8vNKHHa1HbFlaZ2UjSDP43Fss+96YdW/enI8/D/1dvuolLJL5Hk8
brm8veZcLOXnmXh4544KU+RLWRF5Ho/dnsniH1lSfr6Jx+3CnSs3pknZEPI8
Hh9GtwpvkSTl5514bFCEjA2JlbJz5Hk81n53i97x51/9Oh4r39pu6hgmZXnk
eTyaLlC2jgmS8vNQPEbb+GR5/JSyQeR5PPwcN7/t9U3Kz0fxGHl64PXUj1J2
ijyPx9emeheOv5Py81ICBE4hN+xfS1kWeZ4AefKl9/nP/9XLE/Ajf1n+RS8p
syPPEyCp6tlp1EMpP08loHF1ww7VHSk7Rp4n4Ojrnym3b0j5+SoBPwednDH1
ipSlkecJ8F89M0nropSftxJw3cvK9dkZKetLnidg26q4VgtO/KvPJ2CX+blU
syNSdog8T0CC1nhvvwNSfh5LwO+nDadW7ZOyJApXCTix9+F+q91Sfj5LwOqM
iUd+bZOynuR5ArwHF91y3Szl57VE+DS4/263Xsr2k+eJCDksMope/a8fkIgV
ky/O2L9CyuLI80QUvpG86rNUys9ziQjudrBd5kIp60qeJ8LDuuThmblSfr5L
xJnCcRg2S8r2kueJcDe+mq2cKuXnvURkJqVdvzVRyqLI80RM+GPlPHXsv/5D
IubNGj5aZ6SUdSTPE+Eb7tjPZ4iUnwcTYfZ0Tf/Fg6RsF3meCItZLuNEdlJ+
PkzE9n7z1n3tI2Xh5HkiRO8G3N/QQ8rPi0m4OcaotFUXKWtLnieherL/2Mj2
//odSSgZsMbXvbWUbSPPk+C0Qd+2T3MpP08mYdTiQz8ym0hZMHmehN2ba1ac
k0n5+TIJ2vIZNiNFUtaSPE9CyPPLGZXmUn7eTEKu92+/+8ZStpk8T8I8t5y7
s/X/9VeSYP9fwU1jbSkLIM+TcMs29tm7egk/jybBW/Uk1LlawmzI8yQc77FS
26ZCws+nSXCZajYipETC1pPnyXD/cc7TrUDCz6vJsKjW0+mZI2HfyfNkzJjq
sCM9XcLPr8m4w04bnE2WMCvyPBmTuj27PSJews+zyXh+4NnUqigJcyHPk9H1
1Wnxw3AJP9+qf287O3tOsIR9Ic+T0XJoY6BZgISfd5Oxz/Xgl4/+EiYlz5MR
1qM0YN1nCT//JuNUXP/MVu8lbCV5noxpSY6CKF8JPw8n4/F9p4kHX0jYB/I8
GbZ3xl+zeybh5+NkXBhsqVX4SMKE5HkKtqU/3XjtnoSfl1NwvK5TzeRbEraM
PE/BCdW+k7rXJPz8nIJB9q/tXl+SsLfkeQoWDvSvWHFOws/TKfBf8ORL01MS
Zk6ep2CYaM2NkKMSfr5OwZsvRqf2/idhi8jzFBjF7TjTx0PCz9spaO7/436O
m4S9Is9TUFKcG+y5Q8LP3ynY+D1Nf6KrhBmT5yl48sJ7kvZGCT+Pp+BW2xmP
X66RsPnkeQqWHQxRrFgl4efzVJiNsL7YdLmExdJ+T8WrwEEdQxdJ+Hk9Ffs9
ev3eN1/C9tH+T8XD5Jo9tg4Sfn5PxfQRZ0blT5ewLhQPUvGlzd/m1yZL+Hk+
Fb3y7EymjpewaIoPqSj9O8LAYLSEn+9TMS6ipeTdMAnbQ/EiFZdDf/deAwk/
76di8JKRy1oNlLBOFD/Ur9ccexBt+6//m4pmjbcaDveSsD8UT1IxMNVjKbpJ
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
8jwLvyqPKXecEfJ6ZxZed3fpMPCEkI0lz7OQdfzT2trDQl7/zELb/R6/3h4Q
sgryPAuT3P16bdsn5PXQLAytXfK0/24h/35iFjLm7BpYvU3I66NZaCYzjPfd
LGSjyfMs5FzROuy6XsjrpVno77hyXD8XIVOS51kQh7NmVSuEvH6aBTfHAzq+
S4XsCnmehSNudtVbHIW8npqFCdcdGm3nCdlI8jwL6T2y5VWzhLy+mgWXu8lD
fKcJWSl5ngXFmqG7XCcJeb01C9J6QWC/cULmSZ5n4crnMR2qRwp5/TUbBV0K
L7wZKmTDyfNsjPGpUmwbLOT12GzofHV+bDdAyIrJ82ysDB41qbavkNdnsxE3
4oieX08hu0ieZ+PFlb5BO7oKeb02GwuHjbxt31HIhpLn2Rj/+P3RhjZCXr/N
RsmIiwc/thCyQvI8Gz88Ys+4WQt5PTcb0+J2PmcKITtPnmej5SuPVG2JkNd3
s/HlUEmLb5ZCxsjzbAT9er/Bw1TI673ZSMooiBphKGT55Hk2ro3fOdZQV8jr
v9l4u8kl7NdfATtLnmcjPfij0+FaAa8HZyMyYK1gfKWAfx81GxPi3QLNlQJe
H86GfH3xudAiAcslz7OhpeW34VSegNeLs5Fcnek4LUvATpPn2Tga7OwoTRPw
+nE2iksmro9JFDB78jwbReHHzlyKFfB6cja2Z7X/OfePgGWT59k4dsXarFmY
gNeXs9F6pfPi1CABO0meZ2PoB3HgrZ8CXm/ORqWJdNiybwI2gDzPwRT/NcHt
Pwl4/TkHLnNbrMx/J2CZ5HkOVg3tKPN6LeD16BysLfjvz1ofATtOnufg0a/B
d3o9FfD6dA4mjx+7X/VQwPqT5zm4kvvI9c1dAa9X5yDM0nHHjpsClk6e58C2
z8qTg68KeP06Bza/vr/WviRgR8nzHCQO2lzsf1bA69nq9xu69vvvpIDZkuc5
WHAx8NS4owJe385B6aK1DRb/CVgqeZ6Dmuil2yPcBbzerX595SOj824Cdpg8
z8GMY3jgsEPA6985ePaitYONq4D1Ic9zcHjSzKZpGwS8Hp6DbZHRxXfWCPj3
j3Og8LkTuWKVgNfHc2C44FNAl+UC9h95noPiMe3CSxcJeL08BztzY/Nezhew
XuR5DpyeRIu3OQh4/Vw930bNJw2aIWCJ5HkOxqx9fll7ioDX03MQMu1Yzffx
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
8t2tVz2qvmnAVMEg997BeR3qsYg8V6H59/rFds3qEWSv8VyFs2g6SyapR1/y
XIV+ydpLy43rcZ08VyG5vfehsMY6GJPnKiy63faXl6oOG8lzFa7ELGp+pKAO
SfkaQFRYO27piRVpdRhFnqvwcX8XxciYOjwnz9Wvm7972zq4Dk3JcxVcVppt
0v5Wh/3kuUodf1uPSnlTh5KLGs9VMHrX0OvD0zo4kOcqHHl/ud/lO3X4JtR4
rkK7Z/XTt3nWoSt5rsIfRYsjs07W4QJ5rsK5PfrxfQ/UQZs8V8HZ5ckQyc46
OJPnKsxbLvmqXF+HqE8a4FRYr7SfG+5UB5DnKvhebGvuPb8OD8lzFZAaHHN8
Wh3E5LkK1pP7+rmMqcMu8lyFZWvn+o5HHXJcNJ6rYPsdvzv3rcMU8lyFJ7Fp
NSad6+BHnquQ12MIy29Rh7bkuQqiGfOvB8jqcII8V2HS777yh2Z1qGmq8VyF
YJvA+//p1GEJea5eb2FWU1ZU1yL4rAZg9XpZ3UY8urgW/chz9f275hW1z6zF
TfJchb7bV6QZxtfClDxXQbfuRlFOaC02k+cqLN57WvTrey1Shmo8V+HCWfvJ
D/xqMYY8V9+v37V7/z2vxQvyvBK3d7+RrrxfCxvyvBKSpYeujrlai4PkeSWO
lwsGdzpTi7JSzYKuxPKXE6tMDtViLnleCVXXoQEFu2vxfaXG80pczMl/8XtT
LbqT55V4umK0r9eqWlwizytxuf+cyOOOtdAlzyvxPbm50bqZtXAhzytxIf3i
jCnjaxEj13heid1B/n69htZiCHleiYIWtwdI+tfiMXleiWmrekeoutZCSp5X
omv3zftiWtfCjTyvRGWl07i3VrXI+67ZcJXoMsa062XLWkwjzysxxWtB+136
tfhAnquv/2jRgIV1NWhPnlfCPUC8fEhZDU6R55W4d3LTo9Y5NajbqPG8EpkH
3Q0NkmqwjDyvRJgt25UbUYPQQs0CrIRO20emQb9qYEeeq+c3/rOP18ca3CbP
K3EnyX3DyZc1MCfP1ePxVY7d+KgGruS5en6Kzexn3qhBmqfGc/XzMo0YYXe+
BuPI80pcOjdkhfXRGrwizysxQzL3duPeGjQnzytx2LJZVbprDQ6R55Uotji8
5IdLDcpHazyvxEDPa7kPl9RgPnmunj+7uQeOOdTg5xfNBqnE/o2f7NdPqkFP
8rwSBuGBpjNG1OAyeV4J17id5f0H1kCfPFffnySq3LpnDdaS55WYZRJppt2+
BnFrNZ6r18/QLYOzrGswjDxXj3/4x/8CRDXwIs8rkXfxUYGXUQ3k5HklhD8H
OJ3+W4295Hkl6mauqdtSUY0CG43n6vGFDX8wN78aM8hz9fX8Priw1Gp8Is8r
0etG7Li20dXoSJ5XoqXBuaEmv6txhjyvxOLNyiklX6rREKTxvBK5m0u3/fGt
hhN5XolHJ46/e+tVjfDhGs/V4xv7W3z9djUGkueVCO/2cL/HpWrcJc8r0de/
jWDViWpYkueViDo9+MWk/dXYRp5X4k2ryjV9d1QjQ6kBrhL5dWOHNV1fjQnk
eSV23LPvoe1UDV/yvBK7HgX2zZlXjZYUrtTzf7JiWvDUahwhzyvRPeXt4Rej
q6G6ofG8EtIWTeIvDa7GQvK8CnHxkqF7+lQjwErjeRWuXXj4dXmnavQmz6tw
JDlm7oQW1bhKnlchqN918z6yahiS51U42rkxpolZNdaT51VoHFL1TlunGgk/
NQBXwUH34OvcqiqMIM+rEFHlFRhaVIVn5HkV7t53rnqdUQUr8rwKosuf7K/F
VcGdPK/C3DkPPfeHVqFos8bzKvyvY/uOq/F94wB+yldEZrISyUx26BvxObZS
ohBKSclPRrJ3CH3tkZCUFJWQXUYhoZSkvbT3PqN6zj6/57n+PK/O6zz3c93X
fb+ve/Rj5/h+O78zcCDPGbYusQhd/ZFBInnOYOKr6qUWLxmYkOcMksSG3UdH
MgggzxnERgvKewaz7RzFec7AycU+S3yDwTbynEGfu8v+Fv/HIPse5zn7e1UZ
qqQTDOaS5wz0kurNn+5jEEmeM5jy9cblm54M+pHnDCr/ly49tonBUfKcQSDu
nNiylkGNFec5257fIv0V1gxsyXM2HiF/M2ctYPCePGdg8e+a0BH/MhhFnjM4
MsrJr/tkBpfJcwbdGwTnhKMYMBJuwDHw6Kd7v2gIA1fynMHgMV8zkvqw/eTN
ec7g4VPl4GddGcwkzxncnPr9yC15J+6T5wwOmA/u8GHzSJs8Z1Bs2+m3ra4T
e8lzNs4KZ1N7Nm9LRnCeMzidvIqxyO7EUvKcbYf57+yxPzvxkjxnsPpvdkrf
z53QJ8/Z9zHbnCdjx+VZ8pyBffYhRXV0J9rSuQmBwULzQXMyQjuxnjxnECe0
uPH+VieSlnCeM9h0tkHj4SV23iHPGQiODbtw5TTrAHnOwMA1d8LhQ53QIM8Z
PPigW+3GzovbyXMGs/vnv13hzo6zdm6AMIgSDA81Z+dhkOcMYkobw0av7MRj
8pzt3y2zP/VZ0gld8pztZ51eItkcdpyR5wymO2+eV8s6UxfGec7Ar9I8PHMc
6wR5zuCYkb9hgkEnPpLnDOojdsZG6XZiDHnOPl+S4n5TuxNXyXMGQaEPTU6y
7kpXcp4zCB/H67mjowNu5DmDiIHFmutY59N/cp6zedA5Q3dRBVvHkefsuFrZ
y2IqW1c8IM8ZfHrqdnxYegd6kucMmm6a5XdP6sB+8lyCb9f/s+x414Gyg5zn
EiyYuDangq2bLMlzCdxb7h/8/bADr8lzCSY4bzH9eJetg8lzCe50i+gWda0D
fuQ5Ow/tcW2/ea4DwjGc5xJcH39beoqtIx3JcwlmvVoyyGsPWweHcJ6z37/j
ZePE1q1TyHN23t3S756lcwcCyXMJIkJNupitZusW8lwCy5yE06Ot2DqSPJdg
+vnkof35Hci35jyXwHfZsjT1TLYOJ88lcAvCzRZ2HfCEPJdA0ePZ/uKRHdAj
zyU4anjN6+egDviQ5xL03VJ/Kq4XW/fIOIAlaHN9+/RRlw7WWc5zCWxDO9v8
2XVRAnkugefjJ8tPt7HrLPJcAh+tnM+72XXYdfJcgt98L2uX4nbIozjP2Xmz
4pjQJrMdW8hzCWbsUcRYJLcjYyTnuQSlR1vOmCS0w5w8l6DBz3bv0NftCCfP
JXg8wuiI9uN29CLPJdjzyz1QEtKOg+S5BCGDBmXW3WxHRQbnuQTnL/w7Mv8C
u64jzyW4EZNy/sfJdrwlzyUw6JXcI5Zd548gzyW4NsX04aMd7ThPnrNO3tdZ
G7C5HeLjnOcSFNbYGZ5d146N5LkEly917bJ/RTuSOzkwJagZNlrlvqgd08hz
CdYZxvRbM7sdQeS5BK6G4XMXT21HV/JcghMRmqdnjm2HF3kuwVSLX6VjhrWj
8CHnOdtfnmr7gf3bsZA8Z+MdH1Sh1b0dz8hzCbQ+hPoxSjEGkecSOLf0WlIv
FuMUeS5B1/LKYYUNYjTZcZ6z+ag/Qie1TIw15LkEd42/6n7MFeMzeS5Bgn+a
6dM0MYzJc/bvVbN3BCeK4U+eS5AT1ifhSpwYSh7nuQT9HC3HnnwmxlbyXAJ5
QF2kd7gYmYc5zyVAScN8t0Ax5pDnElz5YNu++qoYj8hzCe7FDf685KwYfchz
CQydF4X9e1SMw+Q5+zyzrOAJ3mJU0QUTCQ7+Tnw5bKsYNuS5BKlP+pf23ihG
HHnO9u/6b0Ya9mKMJM+luOWa5yNeJsZF8pytI22WddTME6Mjl/NcCr/IIb4F
M8RwIc+lGCC1NE6bIMbPFZznUhj+KqhLMBTDlDyXwjf6+6cXA8UIJs+lGDq8
b0y4jhjdyHMpvr2Ie3tLUwxv8pytc5s/5p6XiFCs4AawFJUbhvU+3irCYvJc
irHnCpx3V4vwnDyXwkDSluxWJMIQ8lyKd7M3Wzr8EcGXPJeiMX9yldUPEVqi
Oc+liF6/JmBevAgO5Dlbp1rmukx/JUIieS5F0vSYBWOjRDAhz9n2hpTNHRoi
QgB5LoVKb9uq3jdFUK/jPJfiwGir45oXRNhGnktx2f50YqePCNmZnOdS2E3q
N7xpvwhzyXMp8uZ03ijbLkIkeS7FFO1phjmuIvQjz6XYPyLxe4qDCEfJczY+
3SN8E2xEqPHhPJfCwrZs/auFItiS51Koj+1YFmkuwnvyXArTYTa296aIMIo8
l0Ij7uSu62NEuEyes/2brxVxTl8EZhLnuRRG3cs6jvYTwZU8Z+vorO7O3t1E
SIvgPJdCmOhb6qEUYiZ5LsVDF9uDTmIh7pPnbPtnbR9v1yCENnkuRXZGnnBp
mRB7yXMpcmKvZ8/NFaJkNee5FIf3B6WbpgmxlDxn1yW3xGXGiUK8JM+lKAsL
7GEYJ4Q+eS4Fxl62GfhMiLPkOZdP6VE64UK0aXKeS6H5YcOwLoFCrCfPpRhc
ZholvSJE0lHOcylGPVxnLTgjxCTyXIpz/ind644IcZs8lyLCzLekZLcQGuS5
FM1D/0vN8RBiO3nOxj85LyPNSYhcY85zKYJTdrV8tRMC5DmbX5G2oz4sE+Ix
eS7FSMEh75fzhNAlz6WIN2nMj5ohxHHyXAqzmrC1oROEqMvnPJdCNzKs5bah
EKvIcymy5PX3rg4U4iN5LoVi5353Px0hxpDnUuj/t3SRj6YQV8lz9vdznC0O
SgSQnuU8l2J36Qdrr1YB3MhzKdKmOO7fWi1AuorzXAp3e8S6FAlgRp7LkJft
0WfdHwEekOcyfJ6TeXLlDwF6kucyJOqd6GEZL8B+8lyGk807ns5/JUDZU85z
GR5aBXvMjhLAkjyXofBDb3PTEAFek+cypCd/GTXxpgAG5LkMpopXY8dcEMCP
PGefV1k9f/hJAYQbOM9lMNFau3/QAQEcyXMZpgu7JvbdIcD3bM5zGW5Obh/d
Y7MAU8hzGXQtDR90WSdAIHkuw/608zOVNgJ0Ic9lOMOfWtm5UICd5LkMOqa6
kQJzAfJPcZ7LUDJp+pnGKQLMJ89lSP146XD1GAGekOcyRG818ivVF0CPPJfB
IV70tKCfAD7kuQwxi5SNWd0EaJjCeS7D8EG+p+/K22BPnrPrfrMTLlfr2pBA
nsvQTaNpx5nsNowjz2X4819K9OHPbbhOnsvQUa03xOtJG+QlnOfs80yy4txv
t2ELeS5Dubfi3AbfNmSs5TyX4cRv/3MrvdpgTp7LMN7hduwSxzaEk+cyFI/U
GjR3aRt6kecy3F1UFsndUz1InsvglTty24QRbaj4h/NcBs/GXxtG9mzDcvJc
hvDAsmODmVa8Jc9lMJOuy+hT1YoR5LkMy0f8a9ctoxXnyXMZehgd66r+0Arx
K85zGSIGjW7ojGjFRvKcfZ+BU5StN1qRbMJ5LoPTjHvz6060Yhp5LoPczzO2
zLMVQeS5DD7jAh0L1raiK3kug4XxuGmZC1rhRZ7LcDFc1yx1cisKCznPZUh7
unFn0tBWLCTPZXB3/CcnXqsVz8hzGZK+a22PFbVgEHkug6Om+/QXpS04RZ7L
EDlOf0J0agua/DjP2Xham9g9jG3BGvJcBo9z/tEhYS34TJ7L0NZsZxp4pQXG
5Dn7frf+1+x/pAX+5LkMcwKzc694tEA5k/Ocbb+Of9t5uxZsJc9l6KIVYX52
XgsyYzjPZUBwzzcnJ7RgDnnOxq/+q/OxgS14RJ6z+aFKNT+k2YI+5Dn7/E6j
xftam3GYPJdhY93Pk7uLmlHlxHkuR9+6T807fjTDhjyXo1RH4/y2V82II8/l
eOR1dY1HSDNGkudyWI7dZud2oRkXyXM53i697LPpQDM6enCey1HUKPu7cXMz
XMhzOV6MfenpuKIZP305z+WY2f/5+PWzm2FKnsux65t4oMPYZgST53JsXX1i
5pr+zehGnssxvdDmjL2qCd7kuRx121y72DU2oXga57kcEQbvXq3Ma8Ji8lyO
gJ6rbth+bcJz8lyOCiuTsBUxTRhCnssRL1pcaXO3Cb7kuRybhoba2ZxrQksZ
57kcvQv/FVvvaYIDeS6HzpI+36ydm5BInssRdcjou7VVE0zIczlm/efdaT2r
CQHkORvPS3IHG6MmqC9znstxO+hzg03vJmwjz+Uw/R3/ZIWsEdlanOdy2M8R
BdvWNmIueS7Hdpnzl5VZjYgkz+VgjDR17T41oh95LsehX0UB9tGNOEqey3Gw
d/2yNbcaUfOG81yOMzzjiQ6nG2FLnssx48M9rN/ViPfkuRyj7Bf4Om5oxCjy
XI72ysHMxiWNuEyey7Hq1IigTdMbwWzmPJejYfEaL7fhjXAlz+XYu+z9Xo8e
jUgr5jyX41moVdS2zgbMJM/lWO/RvdfOygbcJ8/lWPBS+GD37wZok+dymAd2
3brvQwP2kudy6M1a6HQoogEl5znP5Xhz//GpYzcasJQ8l0PWYpZ/8kQDXpLn
cmT/2+J01rMB+uS5HFPupPS/sLYBZ8lzObqN/im5sqABbWac53JsaG/pfXNy
A9aT53JMGjlrTeDQBiS94DyX4+LX0LQQrQZMIs/l8BNM3PNQVI/b5Lkcs5MK
l0WX1kODPJcjyS7C9kVqPbaT53Isi7t+Lja2HrnOnOdydHQPaokPqwfIczlU
Lolnkq7U4zF5Lse9nC7WqUfqoUuey9HHx3Vhpkc9jpPncoQcLPQssKtHnQ7n
uRy38jy/ls2rxyryXA6rNwOs6ibU4yN5zsbPOE+jbWA9xpDncqyziWno1KzH
VfJcjiPm9zTUrXWQfuA8V6Ch633LbsV1cCPPFRiS9jaxT3Id0k05zxU496Bs
2+DXdTAjzxV48UB/wcj7dXhAnitgWP0/qwkX69CTPFfA/dSP06YH67CfPFeg
/w3TJgu3OpRVcJ4r8H3yc98ltnWwJM8VGLH7X+uVc+rwmjxX4Oeu34s2jKuD
AXmugPfC3TvddevgR54r8FvL4McudS2EVznPFbiXmb3icFMtHMlzBYLj/bud
ya/F9+6c5woElTsKriTVYgp5roDHWhPtu89rEUieK5AzS8PuUVAtupDnCiTe
/Zv6wq8WO8lztv1B8Xvj99YiP5bzXIHnK0OtU1xqMZ88V+BCzrk1Octr8YQ8
VyAQXlfKzWqhR54rUBS9jmkeVQsf8lyBlVMWXJP2qUWDO+e5Alq1E9ZrKWpg
T54r0Ku+n51ufQ0SyHMFjq3oPGKYU4Nx5Dkbj+n52ZO+1OA6ea5Av2evneY8
rYG8P+e5An75F/Qs79RgC3muwD9pjqq1Z2qQcZHzXIEvoWMGbdldA3PyXAGZ
d53LXqcahJPnCjAOoQWnltWgF3mugOYO21PXZtTgIHmuwM5k8fr7hjWoMOc8
V+C676XNMTo1WE6eK5D+fnBQgqQab8lzNn98b3dJr67GCPJcgfGybvf+/qnG
efJcgbFm29yb46shruM8V0Bi/8FJEVWNjeQ5mx+esjM6AdVI3sR5zuab//iS
YaeqMY08Z9+3fuGWSTurEUSeK1Dvu9xg3vpqdCXPFfh7Yl5X28XV8CLPFegi
1jfYNK0ahb05z9nPskp3b4NqLCTP2f58duPvae1qPCPPFbAaN+HMzY4qDCLP
FVCdjHKMqKjCKfKczaccHbd36VVoiuc8V8Byztq7qe+rsIY8V2Bfhq9GyaMq
fCbPFfgYffNO2/UqGJPnCkhr/Vw0T1TBnzxXoHeI01o9zyooPTnPFahs6Hd8
/NoqbCXPFdhcHZE9Z0EVMqs4zxU4HTl0g+3kKswhzxWYZ7Ojr9vQKjwiz5W4
1Xa384BWFfqQ50rciHqkc1FUicPkuRL8Gxft7pdWoor+oUSJtz+Wp7xOrYQN
ea6EzqaanSmxlYgjz5XwOOSwsCSsEiPJcyWajR8sE12pxEXyXIlfVxKPdzta
yd1zYSdAJeYkxlUO21oJF/JciX3Fpw9Ot6/Ez3ec50q8Z0ZaLEMlTMlzJeyn
3pzqbFKJYPJciWv3C1bvG1SJbuS5Ej9cWqMudKmEN3muxMqLORMftFWg2IPz
XInrFhfK44orsJg8V0J4ufe338kVeE6eK1EeuCm/5nUFhpDnSmQf8RmqvF8B
X/JciSXLPS8PuFSBlgGc50rEjzGcOvFQBRzIcyUSRodqLnKvQCJ5rkTh5oZ/
nFZWwIQ8VyJCJpu1z6ICAeS5EolaOXcuja+A+ivnORufB3snPBpQgW3kuRK7
awuaEngVyJ7Dea7ExjbNkrzmcswlz5WwzBco2wrKEUmeKyF492CF9vdy9CPP
lRj4fECG0ctyHCXPlTiTs8zHIrgcNQ2c50r0WDTXZe35ctiS50r4DBbu2r2/
HO/JcyU+73CLueBajlHkuRLPHP0NHtmU4zJ5rsQM3sn4z+blYG5zniuxcP/4
i0VjyuFKniuRmXvxfEe/cqT15Txn8+ewnddIRRlmkudKJF9QT1iXU4b75Dmb
LwMMllx9WgZt8lyJRSsef/lxpgx7yXMlFDvC7qqcylDyifNcCdtIrZxZM8uw
lDxX4qxpzg6vXmV4SZ6z/btUe0tUTSn0yXMl2oc+jK9IKMVZ8lwJZWXYXv1b
pWjbwXmuxLm8LhfW7CrFevKcjd/E7+qrS0qRVMN5rsSCoTU5qcNLMYk8V+JJ
vqu2FlOC2+S5Erwg8+D5GSXQIM+VkN/1vHY8sgTbyXMl3HuLK9/7lCDXn/Nc
ib4TM292OpQA5DmbfxO6RJhOLcFj8lyJpPl+A727l0CXPFfiTaRjbUz5Xxwn
z5X46H9Cr+XdX9TN5zxn42fRGm5y/S9WkedKeBZFXffc9hcfyXMV3MKflj6e
/xdjyHMV+mcwFxqG/MVV8lyFLzf/u2UsKoa0jfNcha8mGzU8U4vhRp6rcDht
b1p0WDHS/8d5rsLqJ6ntTUeKYUaeq5Chuen4JPtiPCDPVdijPX2Ll0kxepLn
KmR1znv6sksx9pPnKlzXPGvXXlyEsoGc5yo4u2uuM3tTBEvyXIV2+7fxRy4V
4TV5rsIw7XsnP7kXwYA8V+HJxzfhmnOL4Eeeq+AbrhyzVK8Iwm+c5yr4S/Z1
u9RSCEfyXIU80eBlmd8L8X0u57kKa1Lr6gaGFGIKea7CmLiyWqcDhQgkz1X4
n1C1KHxFIbqQ5yrYvFyo2Ti2EDvJcxX6Tnk6fJq6APlNnOcqSMJm3T2UX4D5
5LkKTosr9n15XoAn5LkKwSuiY7r/VwA98lwFY+bq0lWbCuBDnqtw/OA13P23
AA2BnOcqGHaPvlXVtwD25LkKURVF1pMa8pFAnqsQZzFy88HEfIwjz1WQrzqa
lxiYj+vkuQpTN9Q91tmTD/lSznMVhl9x++tglY8t5LkKd8e27gw3ykfGF85z
Fc46nXVuk+XBnDxn+/N/42LmZOchnDxn+/NMltN/T/LQizxX4WD9Gc9c3zwc
JM9VEKVb5Bs55aFiF+e5Cl13ScJ2z8jDcvJchVKN2PRPOnl4S56r8O7rXode
NbkYQZ6r8LdhCt8pIRfnyXM2Xi/q/Z4E5EI8jPNchY0r702W78zFRvJchYua
ljOWL8lFcgDnuQoPeC13gobnYhp5rsLYM+ecmjtzEESeq/D8h67P3IwcdCXP
VSjR8OddjcyBF3nO5p+XZkW5Tw4KF3Keq9C8bJOh6bocLCTPVbBNif50dmoO
npHnKjiOK/9Y0D0Hg8hzFQT3VYMmVmTjFHmugmL7P9k+77PRJOQ8Z8fP97bm
7OvZWEOeq7Cr9tOW8Z7Z+Eyeq9DWfffc4wuyYUyes/m+VWNf1tBs+JPnKhjN
8dYeL86C8j43Hagw53OC8nhaFraS52o8m1SzMic8C5mDOc/V+PWlRtPkWBbm
kOdqSF4l6J5enYVH5LkawfO2+xZOzEIf8lyNmSHNq6Z1zcJh8lyNJTp8n/Ml
maj6wXmuhluSW8/Kt5mwIc/VMFGt6Zx9JRNx5LkaVswA/k2PTIwkz9U40hBS
3zIvExfJczVO9hG1LR2UiY59nOdqTH6oszas7Q9cyHP29yubhyqT/+BnC+e5
Gj27Xp+3LvQPTMlzNYYvZb68PvQHweS5GmFVBmF9Vv1BN/JcjSi9LpXbjf/A
mzxXw3bwo5MpGn9QHMR5roavzT8KqzcZWEyeq+Elmfqm65YMPCfP1WiK/GWc
qJeBIeS5GoFZ2U7Hf/yGL3nOxqdtgc3sg7/RYsl5rkbAvoFyZtxvOJDnakQU
WnnEFqQjkTxXwzvg75X959NhQp6rMXBEyr6Zs9MRQJ6r8adFe3Bn4y+oGc5z
NUSHQg7FBf3CNvJcjUaz07cOW/9C9m7OczXmhb30tlCmYS55rsaVKcY9eDFp
iCTP1fB3qHH55pyGfuS5GiNuVO453ycNR8lzNn4OBgttv6SiZjjnuRo3h9/4
o+edClvyXI3QTXP1S0am4j15zvZfgP6oR1k/MYo8V2PPTOP6nb4/cZk8V0P8
brOn2YyfYH5xnrP9e+fbY42aFLiS52rEWi+P+BWQgrTFnOdsfqwQu9xZkoKZ
5LkaOgPf57kzybhPnqtRMyywx/SoZGiT52rkFV+Vq9clYy95roYsLfDxb+1k
lIg5z9U45/F6QMiHH1hKnquRPLrQYtf2H3hJnqsx+mQ3Iwz7AX3yXA0D0exv
fdO/4yx5roZ1u9eoquPf0faA85zNP144Yid/x3rynM3Pa38GXyj7hqShnOdq
3DDoiHG+9g2TyHM1Lhv10pwx/xtuk+dqmA3R699DlAQN8lyNL0e1y8rDkrCd
PFdj77fa/72zT0JuCue5Gq92Pn5+7Z8kgDxn309o83rb2694TJ6rUZH2Z+9C
j6/QJc/Z/DkwWWgw6CtA52s8/qbtbibS5ETso/13Hv/B2B1GuYcS8ZjqeR4/
22hx3kvjRJSS9zy+dnHjkqtFX6BL92l4fO/U9ft2XvyCZbQ/z+Ov3HHF2dri
C47T/h2P3/NQj57rij7jFa3veXxdz/1Zgy0+o47mCx7/76O1usXBnzCMzuN5
/I9Gkekh6gSsovM6Ht+swEXD3TUB52j9z/7ep8MxE5Li8ZHWBzz+qF8tOaLR
8RBQ/cDjB8ve7Is/9xFj6DyPx0+dn3LZr/4DNtB+P48/+a6h4WqrD7hK+4E8
/glFrInR0/f4RvUF+/6uZ14Ie72HlOYfHv/V11MxX73eYTKd7/P4ysFRYwIy
4+BG+4U8voazQG+baRzu0H4Cj7/ror3PvIBYpNN6g8cfF5Tqqse8hSad//P4
C/xWJLSsewszOh/k8bWsCq4nf3iDHXR+wOO3lGwqCxv2Bg9oPcLjh8+teORz
4jXyqF5hv+9uV7Ox/BV60n0gHn+s9bPguQtegU/nCzz+EmHj7+EPX2I/7T/y
+MUr/jmsofUS0bQ/weNf2iQKqtn6AmU03/H4mxc5ed3yf44BdJ+Ax386wvWO
u0MMLOm8ke3f5TWvZuo/wwnav+Dxr34p+qRd9gSvaX3D41sdMo0vD4tGPdU/
7OcdFdEfPB7DgO4X8fh3b+VduD0hCnZ0XsHjPxH+43SwNQJ+tJ/J5ssh5+Eb
Xj1CPNVHPH7SmNxMHHgIIc2fPH5ox4YD42eHYyzdT+Dx66sqeg5QPYAjnV/y
+LwWxxuaX0NxjfZDeHx3/QO69T3v4zutl3j8Necqq/7434OM6ikev1OvIuCz
/l1MofNNHt/0xxrjN+G34U7nHzz+Z//RITEmAQik/VEef+Cxae0xr2/g/z2v
/yA=
       "]]}, {}}, {{}, {}}, {GraphicsGroupBox[{
       {GrayLevel[1], AbsoluteThickness[4], Opacity[
         NCache[
          Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
        "Round"], 
        BSplineCurveBox[{
         Offset[{0, 0}, {2.0937291666665496`, 0.018263562826515388`}], 
          Offset[{0, 0}, {2.0937291666665496`, 0.018263562826515388`}], 
          Offset[{0., 0.}, {2.1142391666665485`, 0.018263562826515388`}], 
          Offset[{0., 0.}, {2.1142391666665485`, 0.018263562826515388`}], 
          Offset[{0., 0.}, {2.1347491666665475`, 0.018263562826515388`}], 
          Offset[{0, 0}, {2.1928154448896082`, 0.17744089301816096`}], 
          Offset[{5., 1.1102230246251565`*^-15}, {2.1928154448896082`, 
           0.17744089301816096`}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1928154448896082`, 
           0.17744089301816096`}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1928154448896082`, 
           0.17744089301816096`}]}]}, 
       {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
        AbsoluteThickness[1.25], 
        BSplineCurveBox[{
         Offset[{0, 0}, {2.0937291666665496`, 0.018263562826515388`}], 
          Offset[{0, 0}, {2.0937291666665496`, 0.018263562826515388`}], 
          Offset[{0., 0.}, {2.1142391666665485`, 0.018263562826515388`}], 
          Offset[{0., 0.}, {2.1142391666665485`, 0.018263562826515388`}], 
          Offset[{0., 0.}, {2.1347491666665475`, 0.018263562826515388`}], 
          Offset[{0, 0}, {2.1928154448896082`, 0.17744089301816096`}], 
          Offset[{5., 1.1102230246251565`*^-15}, {2.1928154448896082`, 
           0.17744089301816096`}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1928154448896082`, 
           0.17744089301816096`}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1928154448896082`, 
           0.17744089301816096`}]}]}, 
       {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
         NCache[
          Rational[2, 3], 0.6666666666666666]]}], 
        PolygonBox[{
         Offset[{23., 7.000000000000005}, {2.1928154448896082`, 
           0.17744089301816096`}], 
          Offset[{23., -6.999999999999995}, {2.1928154448896082`, 
           0.17744089301816096`}], 
          Offset[{10.000000000000002`, -6.999999999999998}, {
           2.1928154448896082`, 0.17744089301816096`}], 
          Offset[{9.999999999999998, 7.000000000000002}, {2.1928154448896082`,
            0.17744089301816096`}]}]}, 
       {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
        AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
        RotationBox["\<\"X\"\>",
         BoxRotation->0.], 
        Offset[{16.5, 3.6637359812630166*^-15}, \
{2.1928154448896082, 0.17744089301816096}], {0, 0}]}], {}}, {}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1: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
PzNr5ighmpDn7VDinTLDwkWIfuR5O4yJXPSh1FWI9WflYLbDOHtrwb1xQpxF
nreDwoo/W9ZNFOI78rwdDqqpRDlOEWIP8rwd8iL6N/6YKsRA8rwdfv4+qB87
Q4ido+Sec5936m/3w7OFuII8b4cNiqF9J88RYlqUHJB2OClb28NgnhCHkeft
oKW92CBvgRBvk+ftEF22t+naIiHqkOftMNsoOXrpUiHuIM/b4fLoYdt7rhBi
+Qq55+3gqPO9a8sqIU4mz9sh2eB24os1Qowkz9uhueWKu6+PEO3I83YY5hqX
N2qjEI+T5+3QL9xossoWIUqM5J5z7+PzxYjUbUL0Is/bwbfbngqDrUJMOSkH
rh1CXIyt5m0W4gDyvB1+//TyvMVd7yp53g45PT2vN6wXYhfyvB18HnSpdeQ+
fwN53g7qs5YN2b1WiPnD5Z5z96e0OSDBW4iu5Hk7LD83oEZrtRDDyfN2iCwM
HTd7pRDNyPN26BMT//jaciEeIM/bwaTLBfNqbn0a6+Qbph3eB5uccFgiRHfy
vB22zxivuJ1bz1jyvB1Oqdrve+8lRHvyvB08zr9WUOPW/zx53g5dMzuPTePe
z59L8gPMrcf1JtPLc4W4ijxvh25pJx+WeQgxQ0/ueTuojS5ytXcX4gjyvB0m
pxdUbJolxLvkOff7s48dfc3tDz3yvB1WPqgaoDxdiL7keTt03Gstn8ztp0pq
OLXDwl5hQRe4/eZGnnPrq20wq3iSEKPI83YYaN/DuDu3P/nkeTus8mwsWD9e
iAHkeTv82eF1P2qsEKVr5Z63w/xFe30VxghxEXneDg31k2ZMHC3E1Cr5C24H
I3FS33MoxIHkeTu4zGwxKOTOz3XyXAplVQm/hM5CVCPPpbDw0Lj6ddx520Se
S6GX1vbiyGFCLDwnP3BSiJw1M++vkxDHkudS2Dy0MHf8ECFGkOdSyD6vX3R2
kBAtyHMpTEdxTb6jEA+S51JYYL6/QzBAiM0o91wKm2QxOuv6CXEOeS4F9cgb
9pFc/PhAnkvhWt8Bk//2FmJv8lwKD53Xbx7PxZuL5LkUIt563DjLxaN/LXKQ
pND7SENGfnchepPnUgjZaq8p5OJX1iq551IIWGo0YZ1QiM7kuRS29XoQEMkX
4n3yXAoV92qz/3Lx0IA8l8Lc5xnCCbZC3E2eS2FRj5U7A62FWG0i91wK+8vu
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
a4NRdD6qwXnNe0TfuG2D/wfZlOFL
       "]]}, {}}, {{}, {}}, {GraphicsGroupBox[{
       {GrayLevel[1], AbsoluteThickness[4], Opacity[
         NCache[
          Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
        "Round"], 
        BSplineCurveBox[{
         Offset[{0, 0}, {2.0937291666665496`, 7.192133384644511}], 
          Offset[{0, 0}, {2.0937291666665496`, 7.192133384644511}], 
          Offset[{0., 0.}, {2.1142391666665485`, 7.192133384644511}], 
          Offset[{0., 0.}, {2.1142391666665485`, 7.192133384644511}], 
          Offset[{0., 0.}, {2.1347491666665475`, 7.192133384644511}], 
          Offset[{0, 0}, {2.1757692442629417`, 7.192132280280064}], 
          Offset[{5., 1.1102230246251565`*^-15}, {2.1757692442629417`, 
           7.192132280280064}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1757692442629417`, 
           7.192132280280064}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1757692442629417`, 
           7.192132280280064}]}]}, 
       {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
        AbsoluteThickness[1.25], 
        BSplineCurveBox[{
         Offset[{0, 0}, {2.0937291666665496`, 7.192133384644511}], 
          Offset[{0, 0}, {2.0937291666665496`, 7.192133384644511}], 
          Offset[{0., 0.}, {2.1142391666665485`, 7.192133384644511}], 
          Offset[{0., 0.}, {2.1142391666665485`, 7.192133384644511}], 
          Offset[{0., 0.}, {2.1347491666665475`, 7.192133384644511}], 
          Offset[{0, 0}, {2.1757692442629417`, 7.192132280280064}], 
          Offset[{5., 1.1102230246251565`*^-15}, {2.1757692442629417`, 
           7.192132280280064}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1757692442629417`, 
           7.192132280280064}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1757692442629417`, 
           7.192132280280064}]}]}, 
       {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
         NCache[
          Rational[2, 3], 0.6666666666666666]]}], 
        PolygonBox[{
         Offset[{23., 7.000000000000005}, {2.1757692442629417`, 
           7.192132280280064}], 
          Offset[{23., -6.999999999999995}, {2.1757692442629417`, 
           7.192132280280064}], 
          Offset[{10.000000000000002`, -6.999999999999998}, {
           2.1757692442629417`, 7.192132280280064}], 
          Offset[{9.999999999999998, 7.000000000000002}, {2.1757692442629417`,
            7.192132280280064}]}]}, 
       {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
        AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
        RotationBox["\<\"Y\"\>",
         BoxRotation->0.], 
        Offset[{16.5, 3.6637359812630166*^-15}, \
{2.1757692442629417, 7.192132280280064}], {0, 0}]}], {}}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 1, 0], PointSize[0.004583333333333334], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1: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
bzshyaI/mobHe08+cZRlDGGf0+tdj+6to8iiX5qG+XYX/yYQ69jnabjYvnLt
mxZZ9E/T4DHRIcblt4xL7PM0FJt+unfrP7Lop6ahwo5RA/OJB7PP06DbFaR5
/FcW/dU07H00a8CqfzI07HM636jZPeysFNFvTYPv+GZRJuIL7PM0TKrwr9ar
Iorov6bDbl2/ohuKKhjIPk/H2UN9TvYopoh+bDqOfh8SKBPns8/TEbP4uYdX
cUX0Z9Px0BzWdkMJBefZ5/T++7qp3Usqol+bjrqjXDqZiQewz9ORaLf9yYtS
iujfpqPW8CMxq0oryGWfp2Nb6fh7Ha0V0c+l1zf72hYQn2Wfp0PjsHfYgzKK
6O+mI/3GRhvXsgr6sc/TsWhy7knbcoro96Zj0LcWnknE2ezzdAy3bN57ubwi
+r/paLbSrsjkCgpOs8/TUXb6lebVKiqiH5yO1duKKd+IC3+Pmo6fXR+vP1BJ
Ef3hdCzbVOBuX1lBJvs8HUGJZTf/IS7sF6fD4+zoIp5VFJxkn6fjsGvxLsur
KqJ/nI49/quqtaymoDf7PB3BD9JvJBEX9pPTseXrrQS36grS2efp6OYqfxlb
QxH95XREuLacZ11TwXH2eTpKOG75z4e4sN+cjlJOvT3W1VLQk32egT7dH45u
Z6OI/nMG4lxq3EklTmWfZ+C42fvxhdqK6EdnoOrlLNcxdRQcZZ9nIPZpfESJ
uoroT2fgYffk/NfE3dnnGRgS2f3NsnqK6FdnwBzWrEfT+gqS2ecZaG+rWfCD
uLB/nYFWrj+GHW6g4DD7PAPbkhpTkayIfnYGXm+s0kxP3JV9ngHNl6wGtxsp
or+dAacqOV8nNVaQyD7PQFSvSW3LNlFEvzsDbnEr+3sTH2SfZ+BGj83Wy5oq
ov+dgUl9X+xpaKugC/s8A7X2zXgZRlzYD8+Az7RXF3c2U8TvjzPQ62XRrp2b
K6I/noEKPbbsSSHezz7PQFIPl4OnWiiiX56B0t7/Btq3VNCJfZ6BMuv2vNAR
F/bPM9AyuOuv660U/GKfZyDt+1ivMa0V0U/PwO7J1Ub+I97Ll5uBk+Fvzj1s
o4j+egbmLd3jNrWtgg7s8wxcLv/fOOt2iui3Z+LmwJX+L4lj2eeZ6DCtQu6c
9orov2fi7dh3Xyt1ULCbfZ6JMj+853kTF/bjM3HRaYina0cF7djnmWhbcN63
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

       "]]}, {}}, {{}, {}}, {GraphicsGroupBox[{
       {GrayLevel[1], AbsoluteThickness[4], Opacity[
         NCache[
          Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
        "Round"], 
        BSplineCurveBox[{
         Offset[{0, 0}, {2.0937291666665496`, 1.7350532860917443`}], 
          Offset[{0, 0}, {2.0937291666665496`, 1.7350532860917443`}], 
          Offset[{0., 0.}, {2.1142391666665485`, 1.7350532860917443`}], 
          Offset[{0., 0.}, {2.1142391666665485`, 1.7350532860917443`}], 
          Offset[{0., 0.}, {2.1347491666665475`, 1.7350532860917443`}], 
          Offset[{0, 0}, {2.1811774619149946`, 1.7312487552145597`}], 
          Offset[{5., 1.1102230246251565`*^-15}, {2.1811774619149946`, 
           1.7312487552145597`}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1811774619149946`, 
           1.7312487552145597`}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1811774619149946`, 
           1.7312487552145597`}]}]}, 
       {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
        AbsoluteThickness[1.25], 
        BSplineCurveBox[{
         Offset[{0, 0}, {2.0937291666665496`, 1.7350532860917443`}], 
          Offset[{0, 0}, {2.0937291666665496`, 1.7350532860917443`}], 
          Offset[{0., 0.}, {2.1142391666665485`, 1.7350532860917443`}], 
          Offset[{0., 0.}, {2.1142391666665485`, 1.7350532860917443`}], 
          Offset[{0., 0.}, {2.1347491666665475`, 1.7350532860917443`}], 
          Offset[{0, 0}, {2.1811774619149946`, 1.7312487552145597`}], 
          Offset[{5., 1.1102230246251565`*^-15}, {2.1811774619149946`, 
           1.7312487552145597`}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1811774619149946`, 
           1.7312487552145597`}], 
          Offset[{10., 2.220446049250313*^-15}, {2.1811774619149946`, 
           1.7312487552145597`}]}]}, 
       {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
         NCache[
          Rational[2, 3], 0.6666666666666666]]}], 
        PolygonBox[{
         Offset[{23., 7.000000000000005}, {2.1811774619149946`, 
           1.7312487552145597`}], 
          Offset[{23., -6.999999999999995}, {2.1811774619149946`, 
           1.7312487552145597`}], 
          Offset[{10.000000000000002`, -6.999999999999998}, {
           2.1811774619149946`, 1.7312487552145597`}], 
          Offset[{9.999999999999998, 7.000000000000002}, {2.1811774619149946`,
            1.7312487552145597`}]}]}, 
       {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
        AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
        RotationBox["\<\"Z\"\>",
         BoxRotation->0.], 
        Offset[{16.5, 3.6637359812630166*^-15}, \
{2.1811774619149946, 1.7312487552145597}], {0, 0}]}], {}}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Time (seconds)\"", TraditionalForm], 
    FormBox["\"Location (meters)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 44.39203323271729}, {All, All}},
  ImageSize->{566.7421875, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Position in X, Y, and Z Over Time (theta = 1.2, phi = .95, v = 13)\"", 
    TraditionalForm],
  PlotRange->{{0, 3.5}, {0, 10}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8167030670134697`*^9, 3.816703106449345*^9, {3.816703302073929*^9, 
   3.816703318620202*^9}, 3.816703360775175*^9, {3.816703393957896*^9, 
   3.816703412986635*^9}, 3.816703453209414*^9, 3.8167034885127363`*^9, {
   3.816703524323442*^9, 3.816703543297222*^9}, {3.816703724885229*^9, 
   3.8167037487664948`*^9}, 3.816703804630198*^9, 3.816705076444003*^9, 
   3.816705348837573*^9, 3.816705521127158*^9, 3.816706163215866*^9, {
   3.816706211485086*^9, 3.816706218063044*^9}, 3.8167078464825497`*^9, 
   3.816718922434922*^9, 3.816719199805644*^9, 3.81706084641814*^9, 
   3.817060911986215*^9, 3.817062541401334*^9, 3.8170626382517548`*^9, 
   3.817062861125778*^9, 3.8170630296468897`*^9, 3.8175009054341497`*^9, {
   3.818599475177833*^9, 3.818599482719717*^9}, 3.818599537014982*^9, 
   3.818599861712409*^9, 3.818599893540502*^9, {3.8186000008857327`*^9, 
   3.818600022809112*^9}, 3.818600227015852*^9, 3.818600542604846*^9, 
   3.818600680292305*^9, 3.8186009201081057`*^9, 3.818601009454856*^9, {
   3.818601157605524*^9, 3.818601168526101*^9}, {3.818601214969049*^9, 
   3.818601222800441*^9}, 3.818601280492119*^9, 3.8186014146714*^9, 
   3.818601494120379*^9, {3.818601790168024*^9, 3.8186018085884857`*^9}, 
   3.818601856960223*^9, 3.818601953960988*^9, 3.824167742298629*^9, 
   3.824167956011291*^9, 3.824228685633627*^9, 3.8242287174588127`*^9, 
   3.8242287901326447`*^9, 3.8242288902852993`*^9, 3.824229162684565*^9, 
   3.824229294807405*^9},
 CellLabel->
  "Out[696]=",ExpressionUUID->"4f889e29-1435-4799-a4ed-3462e51aadff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compiled Results (Gluon):", "Section",
 CellChangeTimes->{{3.816696398161683*^9, 
  3.816696404235834*^9}},ExpressionUUID->"f8049d26-2d3f-4e1f-9a47-\
583921262691"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "import", " ", "data", " ", "compiled", " ", "from", " ", "gluon"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"data", " ", "=", " ", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\</Users/jdmcatee/Desktop/Computational Methods/Final \
Project/total.dat\>\"", ",", "\"\<TSV\>\""}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"r", "=", ".02"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"radius", " ", "of", " ", "ball"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leeway", " ", "=", 
     RowBox[{"2", "*", 
      RowBox[{"(", ".0254", ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "leeway", " ", "of", " ", "2", " ", "inches", " ", "in", " ", "z", " ", 
     "direction"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "create", " ", "separate", " ", "lists", " ", "for", " ", "each", " ", 
     "occurence", " ", "in", " ", "order", " ", "to", " ", "plot", " ", 
     "with", " ", "colors"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pFloor", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"pSide", "=", 
     RowBox[{"{", "}"}]}], ";", " ", 
    RowBox[{"pCeiling", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"pBack", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"pTin", "=", 
     RowBox[{"{", "}"}]}], ";", " ", 
    RowBox[{"pNick", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"pGoodBoast", "=", 
     RowBox[{"{", "}"}]}], ";", " ", 
    RowBox[{"pBadBoast", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "data", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[Equal]", 
         RowBox[{"-", "10"}]}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"pFloor", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[Equal]", 
           RowBox[{"-", "25"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"pSide", ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[Equal]", "25"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"pCeiling", ",", 
              RowBox[{"data", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[Equal]", 
               RowBox[{"-", "100"}]}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"pTin", ",", 
                RowBox[{"data", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"data", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[Equal]", "50"}], 
                ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"pBack", ",", 
                  RowBox[{"data", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[LessEqual]", 
                    "r"}], " ", "&&", " ", 
                   RowBox[{
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "6"}], "]"}], "]"}], " ", 
                    "\[LessEqual]", " ", 
                    RowBox[{"r", " ", "+", " ", "leeway"}]}]}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"pNick", ",", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "\[LessEqual]", 
                    "xGood"}], " ", "&&", " ", 
                    RowBox[{
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "5"}], "]"}], "]"}], "\[GreaterEqual]", 
                    "yGood"}]}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"pGoodBoast", ",", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"pBadBoast", ",", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], 
                 "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"i", "+=", "1"}]}]}], "]"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"pFloor", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"pFloor", ",", "None", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pSide", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"pSide", ",", "None", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pCeiling", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"pCeiling", ",", "None", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pTin", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"pTin", ",", "None", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pBack", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"pBack", ",", "None", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pNick", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"pNick", ",", "None", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pGoodBoast", " ", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"pGoodBoast", ",", "None", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pBadBoast", " ", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"pBadBoast", ",", "None", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"floor", "=", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"pFloor", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"side", "=", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"pSide", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ceiling", "=", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"pCeiling", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Brown"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tin", " ", "=", " ", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"pTin", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"back", "=", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"pBack", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nick", "=", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"pNick", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goodBoast", " ", "=", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"pGoodBoast", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"badBoast", " ", "=", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"pBadBoast", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
    "floor", ",", "side", ",", "ceiling", ",", "tin", ",", "back", ",", 
     "nick", ",", "goodBoast", ",", "badBoast", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Phi (radians)\>\"", ",", "\"\<Theta (radians)\>\"", ",", 
        "\"\<Velocity (meter / second)\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", " ", "\[Rule]", " ", 
      "\"\<Monte Carlo Boast Simulation\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "calculate", " ", "percentage", " ", "of", " ", "non", " ", "problem", 
     " ", "shots", " ", "that", " ", "hit", " ", "nick"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberNicks", "=", 
     RowBox[{"Length", "[", "pNick", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberGood", "=", 
     RowBox[{"Length", "[", "pGoodBoast", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberBad", "=", 
     RowBox[{"Length", "[", "pBadBoast", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberShots", "=", 
     RowBox[{"(", 
      RowBox[{
      "numberNicks", " ", "+", " ", "numberGood", " ", "+", " ", 
       "numberBad"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"percentNick", " ", "=", " ", 
     RowBox[{"N", "[", 
      RowBox[{"numberNicks", " ", "/", " ", "numberShots"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"percentGood", " ", "=", 
     RowBox[{"N", "[", 
      RowBox[{"numberGood", " ", "/", " ", "numberShots"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.81652339551271*^9, 3.816523441664027*^9}, {
   3.8166963776157303`*^9, 3.8166963782110786`*^9}, {3.816700190741083*^9, 
   3.8167002151415167`*^9}, 3.816701300319149*^9, {3.816701487172233*^9, 
   3.816701496459423*^9}, {3.816701558985951*^9, 3.816701590852878*^9}, {
   3.8167073595746202`*^9, 3.816707374801976*^9}, {3.8167074239716187`*^9, 
   3.816707442178372*^9}, {3.816707490375049*^9, 3.816707490959299*^9}, {
   3.816707526036016*^9, 3.8167075540342007`*^9}, {3.816707609146162*^9, 
   3.816707638581658*^9}, {3.816707675319439*^9, 3.816707722389716*^9}, {
   3.816707807165325*^9, 3.8167078088058653`*^9}, {3.816718908610216*^9, 
   3.816718918012395*^9}, {3.8167191967274446`*^9, 3.816719197614389*^9}, {
   3.817060568005097*^9, 3.8170606095681067`*^9}, {3.817060650934366*^9, 
   3.817060680551758*^9}, {3.817060731666101*^9, 3.817060797830955*^9}, {
   3.817060904871305*^9, 3.817060910370405*^9}, {3.81706197286622*^9, 
   3.817062028527747*^9}, {3.817062061011071*^9, 3.81706216460096*^9}, {
   3.8170621996499043`*^9, 3.817062327745213*^9}, {3.817062360795343*^9, 
   3.817062394326766*^9}, {3.817062509967519*^9, 3.817062532213069*^9}, {
   3.8170625866366053`*^9, 3.8170626236250143`*^9}, 3.81706270055389*^9, {
   3.817062951214966*^9, 3.817063027376615*^9}},
 CellLabel->
  "In[697]:=",ExpressionUUID->"2827cf08-1c90-4932-96fd-6b81128a221e"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"",2,697,92,
   16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.8242292949112587`*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"b2c9897b-fddd-4825-ab1b-dfd9cee4c97f"],

Cell[BoxData[
 TemplateBox[{
  "Last","nolast",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no last \
element.\"",2,711,93,16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.824229294976762*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"8694c2dd-9dae-4617-a17e-b70ae05a3382"],

Cell[BoxData[
 TemplateBox[{
  "Last","nolast",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no last \
element.\"",2,712,94,16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.824229295037734*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"c8b513a5-8559-4774-81a1-bb00988ca654"],

Cell[BoxData[
 TemplateBox[{
  "Last","nolast",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no last \
element.\"",2,713,95,16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.8242292950958147`*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"2b591097-29fd-451c-8367-e629bafae25e"],

Cell[BoxData[
 TemplateBox[{
  "Last","nolast",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no last \
element.\"",2,714,96,16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.8242292951537933`*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"a550b386-b725-4852-b01e-5bd83a8444b8"],

Cell[BoxData[
 TemplateBox[{
  "Last","nolast",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no last \
element.\"",2,715,97,16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.82422929521264*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"a97bed09-5fec-4a61-ae52-b4996af64ba5"],

Cell[BoxData[
 TemplateBox[{
  "Last","nolast",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no last \
element.\"",2,716,98,16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.824229295269308*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"4c8a0b31-4931-4461-a123-93bdfe65c4b9"],

Cell[BoxData[
 TemplateBox[{
  "Last","nolast",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no last \
element.\"",2,717,99,16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.824229295324689*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"e0ad889e-484c-404f-81cb-5d7dde47cb9c"],

Cell[BoxData[
 TemplateBox[{
  "Last","nolast",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) has zero length and no last \
element.\"",2,718,100,16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.824229295381048*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"adabf209-e91a-4892-be7a-f6bf9ccf8a01"],

Cell[BoxData[
 Graphics3DBox[{{
    {GrayLevel[0], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], 
     Point3DBox[{}]}, {}, {}, {}, {}}, {
    {RGBColor[0, 0, 1], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], 
     Point3DBox[{}]}, {}, {}, {}, {}}, {
    {RGBColor[0.6, 0.4, 0.2], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], 
     Point3DBox[{}]}, {}, {}, {}, {}}, {
    {RGBColor[1, 0.5, 0], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], 
     Point3DBox[{}]}, {}, {}, {}, {}}, {
    {RGBColor[0.5, 0, 0.5], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], 
     Point3DBox[{}]}, {}, {}, {}, {}}, {
    {RGBColor[0, 1, 0], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], 
     Point3DBox[{}]}, {}, {}, {}, {}}, {
    {RGBColor[1, 1, 0], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], 
     Point3DBox[{}]}, {}, {}, {}, {}}, {
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], 
     Point3DBox[{}]}, {}, {}, {}, {}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"Phi (radians)\"", TraditionalForm], 
    FormBox["\"Theta (radians)\"", TraditionalForm], 
    FormBox["\"Velocity (meter / second)\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  PlotLabel->FormBox["\"Monte Carlo Boast Simulation\"", TraditionalForm],
  PlotRange->{{
     System`ListPointPlot3DDump`dataMinMax[{}, 1], 
     System`ListPointPlot3DDump`dataMinMax[{}, 1]}, {
     System`ListPointPlot3DDump`dataMinMax[{}, 2], 
     System`ListPointPlot3DDump`dataMinMax[{}, 2]}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.81706254306111*^9, 3.817062639511393*^9, 
  3.8170628620335617`*^9, 3.8170630307808857`*^9, 3.817500907115472*^9, 
  3.824167743900034*^9, 3.824167956920968*^9, 3.824228687864458*^9, 
  3.8242287183266573`*^9, 3.824228791268923*^9, 3.8242288918285017`*^9, 
  3.824229164113504*^9, 3.824229295399376*^9},
 CellLabel->
  "Out[719]=",ExpressionUUID->"4e3112ce-c14e-42eb-b0cf-7d0f64042aab"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,724,101,16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.82422929540825*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"3a490201-0b54-45ec-9667-a4f2e8638083"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,724,102,16641007578477224382,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.824229295425654*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"079067af-f0a7-4313-b997-0104faf19242"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,725,103,16641007578477224382,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.824229295443041*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"34cec877-3989-446f-9330-4cada3f4c4b6"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,725,104,16641007578477224382,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8167028650796747`*^9, 3.816703453662311*^9, 
  3.8167074444641867`*^9, 3.816707492173912*^9, 3.816707588381537*^9, 
  3.816707726833387*^9, 3.816707847954505*^9, 3.816718923860229*^9, 
  3.8167192005975037`*^9, 3.817060848060197*^9, 3.817060912772891*^9, 
  3.8170625426950483`*^9, 3.817062639137182*^9, 3.817062861748703*^9, 
  3.8170630302816563`*^9, 3.817500906827736*^9, 3.824167743442402*^9, 
  3.824167956556821*^9, 3.82422868633062*^9, 3.8242287179659243`*^9, 
  3.824228790868088*^9, 3.824228890890946*^9, 3.824229163290091*^9, 
  3.824229295460305*^9},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"ac03970c-7b05-4c45-9211-9bc93bcf5bc0"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1463, 828},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 152, 3, 67, "Section",ExpressionUUID->"d149ec71-2c88-490d-a65c-3a0f7544ddc3"],
Cell[735, 27, 15394, 357, 1690, "Input",ExpressionUUID->"d6489b9a-2141-444b-8992-08ff7bd5cc07"],
Cell[16132, 386, 650, 10, 30, "Input",ExpressionUUID->"dc0a1da6-0ab5-4d4c-bc3d-fd7057def6d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16819, 401, 245, 4, 67, "Section",ExpressionUUID->"ef474e49-1b8c-4a97-8896-924a626d9121"],
Cell[17067, 407, 1713, 41, 115, "Input",ExpressionUUID->"aa7887e1-c3a6-4019-b042-9fb29efd0254"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18817, 453, 151, 3, 67, "Section",ExpressionUUID->"50c39ab7-3ec4-4b53-9e44-85aa14ba9f36"],
Cell[18971, 458, 8850, 212, 829, "Input",ExpressionUUID->"26c43da1-e1bf-479f-bc1d-278ab4308401"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27858, 675, 198, 3, 67, "Section",ExpressionUUID->"77dc45aa-068c-4051-8c2e-9895ea132e86"],
Cell[28059, 680, 1474, 38, 136, "Input",ExpressionUUID->"281ebb40-79df-4d1f-ab06-1322ec5542a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29570, 723, 152, 3, 67, "Section",ExpressionUUID->"b5df3012-15e3-4cd0-9664-62cc325372ad"],
Cell[29725, 728, 6704, 165, 766, "Input",ExpressionUUID->"87a1a640-cfa7-406b-8138-58525a3fad34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36466, 898, 170, 3, 67, "Section",ExpressionUUID->"7e5488e3-1b46-439d-91da-4b6002357bbc"],
Cell[CellGroupData[{
Cell[36661, 905, 415, 9, 30, "Input",ExpressionUUID->"6f017b82-a9ae-4049-9e98-62dc9c8edfe5"],
Cell[37079, 916, 1263, 22, 34, "Output",ExpressionUUID->"005bc185-c836-4274-a81a-188baec6f9c5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38391, 944, 206, 4, 67, "Section",ExpressionUUID->"b1d76950-499b-409a-bea6-9814c803fe66"],
Cell[CellGroupData[{
Cell[38622, 952, 15247, 391, 1165, "Input",ExpressionUUID->"c4069fea-d30a-41de-8d14-723cb57b1774"],
Cell[53872, 1345, 65615, 1093, 224, "Output",ExpressionUUID->"8842d5ea-6351-43db-8023-03deb5ba38f7"],
Cell[119490, 2440, 110894, 1850, 368, "Output",ExpressionUUID->"4f889e29-1435-4799-a4ed-3462e51aadff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230433, 4296, 170, 3, 67, "Section",ExpressionUUID->"f8049d26-2d3f-4e1f-9a47-583921262691"],
Cell[CellGroupData[{
Cell[230628, 4303, 12601, 324, 976, "Input",ExpressionUUID->"2827cf08-1c90-4932-96fd-6b81128a221e"],
Cell[243232, 4629, 893, 17, 24, "Message",ExpressionUUID->"b2c9897b-fddd-4825-ab1b-dfd9cee4c97f"],
Cell[244128, 4648, 908, 17, 24, "Message",ExpressionUUID->"8694c2dd-9dae-4617-a17e-b70ae05a3382"],
Cell[245039, 4667, 908, 17, 24, "Message",ExpressionUUID->"c8b513a5-8559-4774-81a1-bb00988ca654"],
Cell[245950, 4686, 910, 17, 24, "Message",ExpressionUUID->"2b591097-29fd-451c-8367-e629bafae25e"],
Cell[246863, 4705, 910, 17, 24, "Message",ExpressionUUID->"a550b386-b725-4852-b01e-5bd83a8444b8"],
Cell[247776, 4724, 907, 17, 24, "Message",ExpressionUUID->"a97bed09-5fec-4a61-ae52-b4996af64ba5"],
Cell[248686, 4743, 908, 17, 24, "Message",ExpressionUUID->"4c8a0b31-4931-4461-a123-93bdfe65c4b9"],
Cell[249597, 4762, 908, 17, 24, "Message",ExpressionUUID->"e0ad889e-484c-404f-81cb-5d7dde47cb9c"],
Cell[250508, 4781, 909, 17, 24, "Message",ExpressionUUID->"adabf209-e91a-4892-be7a-f6bf9ccf8a01"],
Cell[251420, 4800, 2374, 61, 193, "Output",ExpressionUUID->"4e3112ce-c14e-42eb-b0cf-7d0f64042aab"],
Cell[253797, 4863, 906, 17, 41, "Message",ExpressionUUID->"3a490201-0b54-45ec-9667-a4f2e8638083"],
Cell[254706, 4882, 942, 18, 24, "Message",ExpressionUUID->"079067af-f0a7-4313-b997-0104faf19242"],
Cell[255651, 4902, 907, 17, 41, "Message",ExpressionUUID->"34cec877-3989-446f-9330-4cada3f4c4b6"],
Cell[256561, 4921, 942, 18, 24, "Message",ExpressionUUID->"ac03970c-7b05-4c45-9211-9bc93bcf5bc0"]
}, Open  ]]
}, Open  ]]
}
]
*)

